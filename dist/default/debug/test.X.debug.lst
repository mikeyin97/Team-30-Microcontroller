

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sat Feb 04 17:50:01 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30  0000                     
    31                           ; Version 1.40
    32                           ; Generated 01/12/2016 GMT
    33                           ; 
    34                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4620 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	smallconst
    67  001000                     __psmallconst:
    68                           	opt stack 0
    69  001000  00                 	db	0
    70  001001                     _keys:
    71                           	opt stack 0
    72  001001  31                 	db	49
    73  001002  32                 	db	50
    74  001003  33                 	db	51
    75  001004  41                 	db	65
    76  001005  34                 	db	52
    77  001006  35                 	db	53
    78  001007  36                 	db	54
    79  001008  42                 	db	66
    80  001009  37                 	db	55
    81  00100A  38                 	db	56
    82  00100B  39                 	db	57
    83  00100C  43                 	db	67
    84  00100D  2A                 	db	42
    85  00100E  30                 	db	48
    86  00100F  23                 	db	35
    87  001010  44                 	db	68
    88  001011  00                 	db	0
    89  001012                     __end_of_keys:
    90                           	opt stack 0
    91  001012                     _hexpowers:
    92                           	opt stack 0
    93  001012  0001               	dw	1
    94  001014  0010               	dw	16
    95  001016  0100               	dw	256
    96  001018  1000               	dw	4096
    97  00101A                     __end_of_hexpowers:
    98                           	opt stack 0
    99  00101A                     _happynewyear:
   100                           	opt stack 0
   101  00101A  00                 	db	0
   102  00101B  34                 	db	52
   103  00101C  16                 	db	22
   104  00101D  02                 	db	2
   105  00101E  31                 	db	49
   106  00101F  01                 	db	1
   107  001020  17                 	db	23
   108  001021                     __end_of_happynewyear:
   109                           	opt stack 0
   110  0000                     _LATA	set	3977
   111  0000                     _LATB	set	3978
   112  0000                     _LATC	set	3979
   113  0000                     _LATD	set	3980
   114  0000                     _LATDbits	set	3980
   115  0000                     _LATE	set	3981
   116  0000                     _PORTB	set	3969
   117  0000                     _PORTBbits	set	3969
   118  0000                     _TRISA	set	3986
   119  0000                     _TRISB	set	3987
   120  0000                     _TRISC	set	3988
   121  0000                     _TRISD	set	3989
   122  0000                     _TRISE	set	3990
   123  0000                     _TRISC3	set	31907
   124  0000                     _TRISC4	set	31908
   125  0000                     _ADCON0	set	4034
   126  0000                     _ADCON1	set	4033
   127  0000                     _SSPADD	set	4040
   128  0000                     _SSPBUF	set	4041
   129  0000                     _SSPCON1	set	4038
   130  0000                     _SSPCON2	set	4037
   131  0000                     _SSPSTAT	set	4039
   132  0000                     _ACKDT	set	32301
   133  0000                     _ACKEN	set	32300
   134  0000                     _PEN	set	32298
   135  0000                     _RCEN	set	32299
   136  0000                     _RSEN	set	32297
   137  0000                     _SEN	set	32296
   138  0000                     _nRBPU	set	32655
   139  001021                     STR_6:
   140  001021  25                 	db	37
   141  001022  30                 	db	48	;'0'
   142  001023  32                 	db	50	;'2'
   143  001024  78                 	db	120	;'x'
   144  001025  3A                 	db	58	;':'
   145  001026  25                 	db	37
   146  001027  30                 	db	48	;'0'
   147  001028  32                 	db	50	;'2'
   148  001029  78                 	db	120	;'x'
   149  00102A  3A                 	db	58	;':'
   150  00102B  25                 	db	37
   151  00102C  30                 	db	48	;'0'
   152  00102D  32                 	db	50	;'2'
   153  00102E  78                 	db	120	;'x'
   154  00102F  20                 	db	32
   155  001030  53                 	db	83	;'S'
   156  001031  74                 	db	116	;'t'
   157  001032  61                 	db	97	;'a'
   158  001033  72                 	db	114	;'r'
   159  001034  74                 	db	116	;'t'
   160  001035  21                 	db	33
   161  001036  00                 	db	0
   162  001037                     STR_5:
   163  001037  25                 	db	37
   164  001038  30                 	db	48	;'0'
   165  001039  32                 	db	50	;'2'
   166  00103A  78                 	db	120	;'x'
   167  00103B  2F                 	db	47
   168  00103C  25                 	db	37
   169  00103D  30                 	db	48	;'0'
   170  00103E  32                 	db	50	;'2'
   171  00103F  78                 	db	120	;'x'
   172  001040  2F                 	db	47
   173  001041  25                 	db	37
   174  001042  30                 	db	48	;'0'
   175  001043  32                 	db	50	;'2'
   176  001044  78                 	db	120	;'x'
   177  001045  20                 	db	32
   178  001046  27                 	db	39
   179  001047  23                 	db	35
   180  001048  27                 	db	39
   181  001049  20                 	db	32
   182  00104A  74                 	db	116	;'t'
   183  00104B  6F                 	db	111	;'o'
   184  00104C  00                 	db	0
   185  00104D                     STR_7:
   186  00104D  30                 	db	48	;'0'
   187  00104E  31                 	db	49	;'1'
   188  00104F  32                 	db	50	;'2'
   189  001050  33                 	db	51	;'3'
   190  001051  34                 	db	52	;'4'
   191  001052  35                 	db	53	;'5'
   192  001053  36                 	db	54	;'6'
   193  001054  37                 	db	55	;'7'
   194  001055  38                 	db	56	;'8'
   195  001056  39                 	db	57	;'9'
   196  001057  61                 	db	97	;'a'
   197  001058  62                 	db	98	;'b'
   198  001059  63                 	db	99	;'c'
   199  00105A  64                 	db	100	;'d'
   200  00105B  65                 	db	101	;'e'
   201  00105C  66                 	db	102	;'f'
   202  00105D  00                 	db	0
   203  00105E                     STR_2:
   204  00105E  74                 	db	116	;'t'
   205  00105F  68                 	db	104	;'h'
   206  001060  65                 	db	101	;'e'
   207  001061  20                 	db	32
   208  001062  6F                 	db	111	;'o'
   209  001063  70                 	db	112	;'p'
   210  001064  65                 	db	101	;'e'
   211  001065  72                 	db	114	;'r'
   212  001066  61                 	db	97	;'a'
   213  001067  74                 	db	116	;'t'
   214  001068  69                 	db	105	;'i'
   215  001069  6F                 	db	111	;'o'
   216  00106A  6E                 	db	110	;'n'
   217  00106B  21                 	db	33
   218  00106C  00                 	db	0
   219  00106D                     STR_1:
   220  00106D  59                 	db	89	;'Y'
   221  00106E  6F                 	db	111	;'o'
   222  00106F  75                 	db	117	;'u'
   223  001070  20                 	db	32
   224  001071  68                 	db	104	;'h'
   225  001072  61                 	db	97	;'a'
   226  001073  76                 	db	118	;'v'
   227  001074  65                 	db	101	;'e'
   228  001075  20                 	db	32
   229  001076  62                 	db	98	;'b'
   230  001077  65                 	db	101	;'e'
   231  001078  67                 	db	103	;'g'
   232  001079  75                 	db	117	;'u'
   233  00107A  6E                 	db	110	;'n'
   234  00107B  00                 	db	0
   235  00107C                     STR_4:
   236  00107C  27                 	db	39
   237  00107D  2A                 	db	42
   238  00107E  27                 	db	39
   239  00107F  20                 	db	32
   240  001080  74                 	db	116	;'t'
   241  001081  6F                 	db	111	;'o'
   242  001082  20                 	db	32
   243  001083  53                 	db	83	;'S'
   244  001084  54                 	db	84	;'T'
   245  001085  4F                 	db	79	;'O'
   246  001086  50                 	db	80	;'P'
   247  001087  00                 	db	0
   248  001088                     STR_3:
   249  001088  53                 	db	83	;'S'
   250  001089  6F                 	db	111	;'o'
   251  00108A  72                 	db	114	;'r'
   252  00108B  74                 	db	116	;'t'
   253  00108C  69                 	db	105	;'i'
   254  00108D  6E                 	db	110	;'n'
   255  00108E  67                 	db	103	;'g'
   256  00108F  2E                 	db	46
   257  001090  2E                 	db	46
   258  001091  2E                 	db	46
   259  001092  00                 	db	0
   260                           
   261                           ; #config settings
   262  001093  00                 	db	0	; dummy byte at the end
   263  0000                     
   264                           	psect	cinit
   265  00193E                     __pcinit:
   266                           	opt stack 0
   267  00193E                     start_initialization:
   268                           	opt stack 0
   269  00193E                     __initialization:
   270                           	opt stack 0
   271  00193E                     end_of_initialization:
   272                           	opt stack 0
   273  00193E                     __end_of__initialization:
   274                           	opt stack 0
   275  00193E  0100               	movlb	0
   276  001940  EFA9  F009         	goto	_main	;jump to C main() function
   277                           
   278                           	psect	cstackCOMRAM
   279  000001                     __pcstackCOMRAM:
   280                           	opt stack 0
   281  000001                     ??_isdigit:
   282  000001                     ??_I2C_Master_Wait:
   283  000001                     ?___wmul:
   284                           	opt stack 0
   285  000001                     ?___lwdiv:
   286                           	opt stack 0
   287  000001                     ?___lldiv:
   288                           	opt stack 0
   289  000001                     lcdNibble@temp:
   290                           	opt stack 0
   291  000001                     delay@seconds:
   292                           	opt stack 0
   293  000001                     time_difference@time1:
   294                           	opt stack 0
   295  000001                     ___wmul@multiplier:
   296                           	opt stack 0
   297  000001                     ___lwdiv@dividend:
   298                           	opt stack 0
   299  000001                     ___lldiv@dividend:
   300                           	opt stack 0
   301                           
   302                           ; 4 bytes @ 0x0
   303  000001                     	ds	1
   304  000002                     lcdNibble@data:
   305                           	opt stack 0
   306  000002                     I2C_Master_Read@a:
   307                           	opt stack 0
   308  000002                     _isdigit$544:
   309                           	opt stack 0
   310  000002                     I2C_Master_Write@d:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x1
   314  000002                     	ds	1
   315  000003                     ??_delay:
   316  000003                     lcdInst@data:
   317                           	opt stack 0
   318  000003                     putch@data:
   319                           	opt stack 0
   320  000003                     I2C_Master_Read@temp:
   321                           	opt stack 0
   322  000003                     isdigit@c:
   323                           	opt stack 0
   324  000003                     time_difference@time2:
   325                           	opt stack 0
   326  000003                     ___wmul@multiplicand:
   327                           	opt stack 0
   328  000003                     ___lwdiv@divisor:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x2
   332  000003                     	ds	1
   333  000004                     ??_initLCD:
   334  000004                     update_time@time:
   335                           	opt stack 0
   336  000004                     delay@i:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x3
   340  000004                     	ds	1
   341  000005                     ??_time_difference:
   342  000005                     ___wmul@product:
   343                           	opt stack 0
   344  000005                     ___lwdiv@quotient:
   345                           	opt stack 0
   346  000005                     ___lldiv@divisor:
   347                           	opt stack 0
   348                           
   349                           ; 4 bytes @ 0x4
   350  000005                     	ds	1
   351  000006                     update_time@i:
   352                           	opt stack 0
   353  000006                     delay@i_197:
   354                           	opt stack 0
   355  000006                     time_difference@sec:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x5
   359  000006                     	ds	1
   360  000007                     ___lwdiv@counter:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x6
   364  000007                     	ds	1
   365  000008                     ?_printf:
   366                           	opt stack 0
   367  000008                     printf@f:
   368                           	opt stack 0
   369                           
   370                           ; 3 bytes @ 0x7
   371  000008                     	ds	1
   372  000009                     ___lldiv@quotient:
   373                           	opt stack 0
   374                           
   375                           ; 4 bytes @ 0x8
   376  000009                     	ds	4
   377  00000D                     ___lldiv@counter:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0xC
   381  00000D                     	ds	1
   382  00000E                     I2C_Master_Init@c:
   383                           	opt stack 0
   384                           
   385                           ; 4 bytes @ 0xD
   386  00000E                     	ds	3
   387  000011                     ??_printf:
   388                           
   389                           ; 1 bytes @ 0x10
   390  000011                     	ds	1
   391  000012                     ??_I2C_Master_Init:
   392                           
   393                           ; 1 bytes @ 0x11
   394  000012                     	ds	3
   395  000015                     printf@ap:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x14
   399  000015                     	ds	2
   400  000017                     printf@cp:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x16
   404  000017                     	ds	2
   405  000019                     printf@idx:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x18
   409  000019                     	ds	1
   410  00001A                     printf@flag:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x19
   414  00001A                     	ds	1
   415  00001B                     printf@val:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x1A
   419  00001B                     	ds	2
   420  00001D                     printf@prec:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x1C
   424  00001D                     	ds	1
   425  00001E                     printf@len:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x1D
   429  00001E                     	ds	2
   430  000020                     printf@width:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x1F
   434  000020                     	ds	2
   435  000022                     printf@c:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x21
   439  000022                     	ds	1
   440  000023                     stand_by@time:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x22
   444  000023                     	ds	2
   445  000025                     ??_stand_by:
   446                           
   447                           ; 1 bytes @ 0x24
   448  000025                     	ds	3
   449  000028                     ??_main:
   450                           
   451                           ; 1 bytes @ 0x27
   452  000028                     	ds	3
   453  00002B                     main@time:
   454                           	opt stack 0
   455                           
   456                           ; 7 bytes @ 0x2A
   457  00002B                     	ds	7
   458  000032                     main@start_time:
   459                           	opt stack 0
   460                           
   461                           ; 7 bytes @ 0x31
   462  000032                     	ds	7
   463  000039                     main@end_time:
   464                           	opt stack 0
   465                           
   466                           ; 7 bytes @ 0x38
   467  000039                     	ds	7
   468  000040                     main@d:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x3F
   472  000040                     	ds	1
   473                           
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 33 in file "main.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  end_time        7   56[COMRAM] unsigned char [7]
   484 ;;  start_time      7   49[COMRAM] unsigned char [7]
   485 ;;  time            7   42[COMRAM] unsigned char [7]
   486 ;;  d               1   63[COMRAM] unsigned char 
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;Total ram usage:       25 bytes
   501 ;; Hardware stack levels required when called:    4
   502 ;; This function calls:
   503 ;;		_I2C_Master_Init
   504 ;;		_delay
   505 ;;		_initLCD
   506 ;;		_lcdInst
   507 ;;		_printf
   508 ;;		_stand_by
   509 ;;		_time_difference
   510 ;;		_update_time
   511 ;; This function is called by:
   512 ;;		Startup code after reset
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text0
   517  001352                     __ptext0:
   518                           	opt stack 0
   519  001352                     _main:
   520                           	opt stack 27
   521                           
   522                           ;main.c: 37: TRISA = 0xFF;
   523                           
   524                           ;incstack = 0
   525  001352  6892               	setf	3986,c	;volatile
   526                           
   527                           ;main.c: 38: TRISB = 0xFF;
   528  001354  6893               	setf	3987,c	;volatile
   529                           
   530                           ;main.c: 39: TRISC = 0x00;
   531  001356  0E00               	movlw	0
   532  001358  6E94               	movwf	3988,c	;volatile
   533                           
   534                           ;main.c: 40: TRISD = 0x00;
   535  00135A  0E00               	movlw	0
   536  00135C  6E95               	movwf	3989,c	;volatile
   537                           
   538                           ;main.c: 41: TRISE = 0x00;
   539  00135E  0E00               	movlw	0
   540  001360  6E96               	movwf	3990,c	;volatile
   541                           
   542                           ;main.c: 43: LATA = 0x00;
   543  001362  0E00               	movlw	0
   544  001364  6E89               	movwf	3977,c	;volatile
   545                           
   546                           ;main.c: 44: LATB = 0x00;
   547  001366  0E00               	movlw	0
   548  001368  6E8A               	movwf	3978,c	;volatile
   549                           
   550                           ;main.c: 45: LATC = 0x00;
   551  00136A  0E00               	movlw	0
   552  00136C  6E8B               	movwf	3979,c	;volatile
   553                           
   554                           ;main.c: 46: LATD = 0x00;
   555  00136E  0E00               	movlw	0
   556  001370  6E8C               	movwf	3980,c	;volatile
   557                           
   558                           ;main.c: 47: LATE = 0x00;
   559  001372  0E00               	movlw	0
   560  001374  6E8D               	movwf	3981,c	;volatile
   561                           
   562                           ;main.c: 49: ADCON0 = 0x00;
   563  001376  0E00               	movlw	0
   564  001378  6EC2               	movwf	4034,c	;volatile
   565                           
   566                           ;main.c: 50: ADCON1 = 0xFF;
   567  00137A  68C1               	setf	4033,c	;volatile
   568                           
   569                           ;main.c: 52: nRBPU = 0;
   570  00137C  9EF1               	bcf	intcon2,7,c	;volatile
   571                           
   572                           ;main.c: 56: initLCD();
   573  00137E  ECDC  F00B         	call	_initLCD	;wreg free
   574                           
   575                           ;main.c: 57: lcdInst(0b00000001);;
   576  001382  0E01               	movlw	1
   577  001384  EC8C  F00C         	call	_lcdInst
   578                           
   579                           ;main.c: 58: unsigned char time[7];
   580                           ;main.c: 59: unsigned char start_time[7];
   581                           ;main.c: 60: unsigned char end_time[7];
   582                           ;main.c: 62: I2C_Master_Init(10000);
   583  001388  0E10               	movlw	16
   584  00138A  6E0E               	movwf	I2C_Master_Init@c,c
   585  00138C  0E27               	movlw	39
   586  00138E  6E0F               	movwf	I2C_Master_Init@c+1,c
   587  001390  0E00               	movlw	0
   588  001392  6E10               	movwf	I2C_Master_Init@c+2,c
   589  001394  0E00               	movlw	0
   590  001396  6E11               	movwf	I2C_Master_Init@c+3,c
   591  001398  EC5F  F00B         	call	_I2C_Master_Init	;wreg free
   592                           
   593                           ;main.c: 68: while (PORTBbits.RB1 == 0 || keys[(PORTB & 0xF0)>>4] != '#') {
   594  00139C  D006               	goto	l1479
   595  00139E                     l1477:
   596                           
   597                           ;main.c: 71: stand_by(time);
   598  00139E  0E2B               	movlw	low main@time
   599  0013A0  6E23               	movwf	stand_by@time,c
   600  0013A2  0E00               	movlw	high main@time
   601  0013A4  6E24               	movwf	stand_by@time+1,c
   602  0013A6  EC7A  F00A         	call	_stand_by	;wreg free
   603  0013AA                     l1479:
   604  0013AA  A281               	btfss	3969,1,c	;volatile
   605  0013AC  D7F8               	goto	l1477
   606  0013AE  3881               	swapf	3969,w,c	;volatile
   607  0013B0  0B0F               	andlw	15
   608  0013B2  0B0F               	andlw	15
   609  0013B4  6E28               	movwf	??_main& (0+255),c
   610  0013B6  6A29               	clrf	(??_main+1)& (0+255),c
   611  0013B8  0E01               	movlw	low _keys
   612  0013BA  2428               	addwf	??_main,w,c
   613  0013BC  6EF6               	movwf	tblptrl,c
   614  0013BE  0E10               	movlw	high _keys
   615  0013C0  2029               	addwfc	??_main+1,w,c
   616  0013C2  6EF7               	movwf	tblptrh,c
   617  0013C4                     	if	1	;There are 3 active tblptr bytes
   618  0013C4  6AF8               	clrf	tblptru,c
   619  0013C6  0E00               	movlw	low (__mediumconst shr (0+16))
   620  0013C8  22F8               	addwfc	tblptru,f,c
   621  0013CA                     	endif
   622  0013CA  0008               	tblrd		*
   623  0013CC  50F5               	movf	tablat,w,c
   624  0013CE  0A23               	xorlw	35
   625  0013D0  A4D8               	btfss	status,2,c
   626  0013D2  D7E5               	goto	l1477
   627                           
   628                           ;main.c: 72: }
   629                           ;main.c: 73: update_time(start_time);
   630  0013D4  0E32               	movlw	low main@start_time
   631  0013D6  6E04               	movwf	update_time@time,c
   632  0013D8  0E00               	movlw	high main@start_time
   633  0013DA  6E05               	movwf	update_time@time+1,c
   634  0013DC  EC26  F00B         	call	_update_time	;wreg free
   635                           
   636                           ;main.c: 74: lcdInst(0b00000001);;
   637  0013E0  0E01               	movlw	1
   638  0013E2  EC8C  F00C         	call	_lcdInst
   639                           
   640                           ;main.c: 75: initLCD();
   641  0013E6  ECDC  F00B         	call	_initLCD	;wreg free
   642                           
   643                           ;main.c: 76: lcdInst(0b10000000);;
   644  0013EA  0E80               	movlw	128
   645  0013EC  EC8C  F00C         	call	_lcdInst
   646                           
   647                           ;main.c: 77: printf("You have begun");
   648  0013F0  0E6D               	movlw	low STR_1
   649  0013F2  6E08               	movwf	printf@f,c
   650  0013F4  0E10               	movlw	high STR_1
   651  0013F6  6E09               	movwf	printf@f+1,c
   652  0013F8  5008               	movf	printf@f,w,c
   653  0013FA  1009               	iorwf	printf@f+1,w,c
   654  0013FC  A4D8               	btfss	status,2,c
   655  0013FE  0E00               	movlw	low (__mediumconst shr (0+16))
   656  001400  6E0A               	movwf	printf@f+2,c
   657  001402  EC4A  F008         	call	_printf	;wreg free
   658                           
   659                           ;main.c: 78: lcdInst(0b11000000);;
   660  001406  0EC0               	movlw	192
   661  001408  EC8C  F00C         	call	_lcdInst
   662                           
   663                           ;main.c: 79: printf("the operation!");
   664  00140C  0E5E               	movlw	low STR_2
   665  00140E  6E08               	movwf	printf@f,c
   666  001410  0E10               	movlw	high STR_2
   667  001412  6E09               	movwf	printf@f+1,c
   668  001414  5008               	movf	printf@f,w,c
   669  001416  1009               	iorwf	printf@f+1,w,c
   670  001418  A4D8               	btfss	status,2,c
   671  00141A  0E00               	movlw	low (__mediumconst shr (0+16))
   672  00141C  6E0A               	movwf	printf@f+2,c
   673  00141E  EC4A  F008         	call	_printf	;wreg free
   674                           
   675                           ;main.c: 80: delay(3);
   676  001422  0E00               	movlw	0
   677  001424  6E02               	movwf	delay@seconds+1,c
   678  001426  0E03               	movlw	3
   679  001428  6E01               	movwf	delay@seconds,c
   680  00142A  EC26  F00C         	call	_delay	;wreg free
   681                           
   682                           ;main.c: 81: lcdInst(0b00000001);;
   683  00142E  0E01               	movlw	1
   684  001430  EC8C  F00C         	call	_lcdInst
   685                           
   686                           ;main.c: 82: initLCD();
   687  001434  ECDC  F00B         	call	_initLCD	;wreg free
   688                           
   689                           ;main.c: 83: lcdInst(0b10000000);;
   690  001438  0E80               	movlw	128
   691  00143A  EC8C  F00C         	call	_lcdInst
   692                           
   693                           ;main.c: 84: printf("Sorting...");
   694  00143E  0E88               	movlw	low STR_3
   695  001440  6E08               	movwf	printf@f,c
   696  001442  0E10               	movlw	high STR_3
   697  001444  6E09               	movwf	printf@f+1,c
   698  001446  5008               	movf	printf@f,w,c
   699  001448  1009               	iorwf	printf@f+1,w,c
   700  00144A  A4D8               	btfss	status,2,c
   701  00144C  0E00               	movlw	low (__mediumconst shr (0+16))
   702  00144E  6E0A               	movwf	printf@f+2,c
   703  001450  EC4A  F008         	call	_printf	;wreg free
   704                           
   705                           ;main.c: 85: lcdInst(0b11000000);;
   706  001454  0EC0               	movlw	192
   707  001456  EC8C  F00C         	call	_lcdInst
   708                           
   709                           ;main.c: 86: printf("'*' to STOP");
   710  00145A  0E7C               	movlw	low STR_4
   711  00145C  6E08               	movwf	printf@f,c
   712  00145E  0E10               	movlw	high STR_4
   713  001460  6E09               	movwf	printf@f+1,c
   714  001462  5008               	movf	printf@f,w,c
   715  001464  1009               	iorwf	printf@f+1,w,c
   716  001466  A4D8               	btfss	status,2,c
   717  001468  0E00               	movlw	low (__mediumconst shr (0+16))
   718  00146A  6E0A               	movwf	printf@f+2,c
   719  00146C  EC4A  F008         	call	_printf	;wreg free
   720  001470                     l66:
   721  001470  A281               	btfss	3969,1,c	;volatile
   722  001472  D7FE               	goto	l66
   723  001474  3881               	swapf	3969,w,c	;volatile
   724  001476  0B0F               	andlw	15
   725  001478  0B0F               	andlw	15
   726  00147A  6E28               	movwf	??_main& (0+255),c
   727  00147C  6A29               	clrf	(??_main+1)& (0+255),c
   728  00147E  0E01               	movlw	low _keys
   729  001480  2428               	addwf	??_main,w,c
   730  001482  6EF6               	movwf	tblptrl,c
   731  001484  0E10               	movlw	high _keys
   732  001486  2029               	addwfc	??_main+1,w,c
   733  001488  6EF7               	movwf	tblptrh,c
   734  00148A                     	if	1	;There are 3 active tblptr bytes
   735  00148A  6AF8               	clrf	tblptru,c
   736  00148C  0E00               	movlw	low (__mediumconst shr (0+16))
   737  00148E  22F8               	addwfc	tblptru,f,c
   738  001490                     	endif
   739  001490  0008               	tblrd		*
   740  001492  50F5               	movf	tablat,w,c
   741  001494  0A2A               	xorlw	42
   742  001496  A4D8               	btfss	status,2,c
   743  001498  D7EB               	goto	l66
   744                           
   745                           ;main.c: 90: }
   746                           ;main.c: 92: update_time(end_time);
   747  00149A  0E39               	movlw	low main@end_time
   748  00149C  6E04               	movwf	update_time@time,c
   749  00149E  0E00               	movlw	high main@end_time
   750  0014A0  6E05               	movwf	update_time@time+1,c
   751  0014A2  EC26  F00B         	call	_update_time	;wreg free
   752                           
   753                           ;main.c: 94: lcdInst(0b00000001);;
   754  0014A6  0E01               	movlw	1
   755  0014A8  EC8C  F00C         	call	_lcdInst
   756                           
   757                           ;main.c: 95: initLCD();
   758  0014AC  ECDC  F00B         	call	_initLCD	;wreg free
   759                           
   760                           ;main.c: 96: lcdInst(0b10000000);;
   761  0014B0  0E80               	movlw	128
   762  0014B2  EC8C  F00C         	call	_lcdInst
   763                           
   764                           ;main.c: 97: char d;
   765                           ;main.c: 98: d = time_difference(start_time, end_time);
   766  0014B6  0E32               	movlw	low main@start_time
   767  0014B8  6E01               	movwf	time_difference@time1,c
   768  0014BA  0E00               	movlw	high main@start_time
   769  0014BC  6E02               	movwf	time_difference@time1+1,c
   770  0014BE  0E39               	movlw	low main@end_time
   771  0014C0  6E03               	movwf	time_difference@time2,c
   772  0014C2  0E00               	movlw	high main@end_time
   773  0014C4  6E04               	movwf	time_difference@time2+1,c
   774  0014C6  EC02  F00C         	call	_time_difference	;wreg free
   775  0014CA  6E40               	movwf	main@d,c
   776                           
   777                           ;main.c: 99: printf(d);
   778  0014CC  5040               	movf	main@d,w,c
   779  0014CE  6E28               	movwf	??_main& (0+255),c
   780  0014D0  6A29               	clrf	(??_main+1)& (0+255),c
   781  0014D2  6A2A               	clrf	(??_main+2)& (0+255),c
   782  0014D4  C028  F008         	movff	??_main,printf@f
   783  0014D8  C029  F009         	movff	??_main+1,printf@f+1
   784  0014DC  C02A  F00A         	movff	??_main+2,printf@f+2
   785  0014E0  EC4A  F008         	call	_printf	;wreg free
   786                           
   787                           ;main.c: 100: delay(5);
   788  0014E4  0E00               	movlw	0
   789  0014E6  6E02               	movwf	delay@seconds+1,c
   790  0014E8  0E05               	movlw	5
   791  0014EA  6E01               	movwf	delay@seconds,c
   792  0014EC  EC26  F00C         	call	_delay	;wreg free
   793                           
   794                           ;main.c: 101: return;
   795  0014F0  EF01  F000         	goto	start
   796  0014F4                     __end_of_main:
   797                           	opt stack 0
   798                           tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           intcon2	equ	0xFF1
   803                           status	equ	0xFD8
   804                           
   805 ;; *************** function _time_difference *****************
   806 ;; Defined at:
   807 ;;		line 159 in file "main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  time1           2    0[COMRAM] PTR unsigned char 
   810 ;;		 -> main@start_time(7), 
   811 ;;  time2           2    2[COMRAM] PTR unsigned char 
   812 ;;		 -> main@end_time(7), 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  sec             1    5[COMRAM] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      unsigned char 
   817 ;; Registers used:
   818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;Total ram usage:        6 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text1
   838  001804                     __ptext1:
   839                           	opt stack 0
   840  001804                     _time_difference:
   841                           	opt stack 30
   842                           
   843                           ;main.c: 160: char sec;
   844                           ;main.c: 161: sec = 60*(time1[1] - time2[1]);
   845                           
   846                           ;incstack = 0
   847  001804  EE20 F001          	lfsr	2,1
   848  001808  5001               	movf	time_difference@time1,w,c
   849  00180A  26D9               	addwf	fsr2l,f,c
   850  00180C  5002               	movf	time_difference@time1+1,w,c
   851  00180E  22DA               	addwfc	fsr2h,f,c
   852  001810  50DF               	movf	indf2,w,c
   853  001812  6E05               	movwf	??_time_difference& (0+255),c
   854  001814  EE20 F001          	lfsr	2,1
   855  001818  5003               	movf	time_difference@time2,w,c
   856  00181A  26D9               	addwf	fsr2l,f,c
   857  00181C  5004               	movf	time_difference@time2+1,w,c
   858  00181E  22DA               	addwfc	fsr2h,f,c
   859  001820  50DF               	movf	indf2,w,c
   860  001822  0800               	sublw	0
   861  001824  2405               	addwf	??_time_difference,w,c
   862  001826  0D3C               	mullw	60
   863  001828  CFF3 F006          	movff	prodl,time_difference@sec
   864                           
   865                           ;main.c: 162: sec += (time1[0] - time2[0]);
   866  00182C  C001  FFD9         	movff	time_difference@time1,fsr2l
   867  001830  C002  FFDA         	movff	time_difference@time1+1,fsr2h
   868  001834  50DF               	movf	indf2,w,c
   869  001836  6E05               	movwf	??_time_difference& (0+255),c
   870  001838  C003  FFD9         	movff	time_difference@time2,fsr2l
   871  00183C  C004  FFDA         	movff	time_difference@time2+1,fsr2h
   872  001840  50DF               	movf	indf2,w,c
   873  001842  0800               	sublw	0
   874  001844  2405               	addwf	??_time_difference,w,c
   875  001846  2606               	addwf	time_difference@sec,f,c
   876                           
   877                           ;main.c: 163: return sec;
   878  001848  5006               	movf	time_difference@sec,w,c
   879  00184A  0012               	return	
   880  00184C                     __end_of_time_difference:
   881                           	opt stack 0
   882                           tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           prodl	equ	0xFF3
   887                           intcon2	equ	0xFF1
   888                           indf2	equ	0xFDF
   889                           fsr2h	equ	0xFDA
   890                           fsr2l	equ	0xFD9
   891                           status	equ	0xFD8
   892                           
   893 ;; *************** function _stand_by *****************
   894 ;; Defined at:
   895 ;;		line 122 in file "main.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  time            2   34[COMRAM] PTR unsigned char 
   898 ;;		 -> main@time(7), 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;Total ram usage:        5 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    3
   917 ;; This function calls:
   918 ;;		_lcdInst
   919 ;;		_printf
   920 ;;		_update_time
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text2
   927  0014F4                     __ptext2:
   928                           	opt stack 0
   929  0014F4                     _stand_by:
   930                           	opt stack 27
   931                           
   932                           ;main.c: 124: update_time(time);
   933                           
   934                           ;incstack = 0
   935  0014F4  C023  F004         	movff	stand_by@time,update_time@time
   936  0014F8  C024  F005         	movff	stand_by@time+1,update_time@time+1
   937  0014FC  EC26  F00B         	call	_update_time	;wreg free
   938                           
   939                           ;main.c: 126: lcdInst(0b10000000);;
   940  001500  0E80               	movlw	128
   941  001502  EC8C  F00C         	call	_lcdInst
   942                           
   943                           ;main.c: 127: printf("%02x/%02x/%02x '#' to", time[6],time[5],time[4]);
   944  001506  0E37               	movlw	low STR_5
   945  001508  6E08               	movwf	printf@f,c
   946  00150A  0E10               	movlw	high STR_5
   947  00150C  6E09               	movwf	printf@f+1,c
   948  00150E  5008               	movf	printf@f,w,c
   949  001510  1009               	iorwf	printf@f+1,w,c
   950  001512  A4D8               	btfss	status,2,c
   951  001514  0E00               	movlw	low (__mediumconst shr (0+16))
   952  001516  6E0A               	movwf	printf@f+2,c
   953  001518  EE20 F006          	lfsr	2,6
   954  00151C  5023               	movf	stand_by@time,w,c
   955  00151E  26D9               	addwf	fsr2l,f,c
   956  001520  5024               	movf	stand_by@time+1,w,c
   957  001522  22DA               	addwfc	fsr2h,f,c
   958  001524  50DF               	movf	indf2,w,c
   959  001526  6E25               	movwf	??_stand_by& (0+255),c
   960  001528  5025               	movf	??_stand_by,w,c
   961  00152A  6E0B               	movwf	?_printf+3,c
   962  00152C  6A0C               	clrf	?_printf+4,c
   963  00152E  EE20 F005          	lfsr	2,5
   964  001532  5023               	movf	stand_by@time,w,c
   965  001534  26D9               	addwf	fsr2l,f,c
   966  001536  5024               	movf	stand_by@time+1,w,c
   967  001538  22DA               	addwfc	fsr2h,f,c
   968  00153A  50DF               	movf	indf2,w,c
   969  00153C  6E26               	movwf	(??_stand_by+1)& (0+255),c
   970  00153E  5026               	movf	??_stand_by+1,w,c
   971  001540  6E0D               	movwf	?_printf+5,c
   972  001542  6A0E               	clrf	?_printf+6,c
   973  001544  EE20 F004          	lfsr	2,4
   974  001548  5023               	movf	stand_by@time,w,c
   975  00154A  26D9               	addwf	fsr2l,f,c
   976  00154C  5024               	movf	stand_by@time+1,w,c
   977  00154E  22DA               	addwfc	fsr2h,f,c
   978  001550  50DF               	movf	indf2,w,c
   979  001552  6E27               	movwf	(??_stand_by+2)& (0+255),c
   980  001554  5027               	movf	??_stand_by+2,w,c
   981  001556  6E0F               	movwf	?_printf+7,c
   982  001558  6A10               	clrf	?_printf+8,c
   983  00155A  EC4A  F008         	call	_printf	;wreg free
   984                           
   985                           ;main.c: 128: lcdInst(0b11000000);;
   986  00155E  0EC0               	movlw	192
   987  001560  EC8C  F00C         	call	_lcdInst
   988                           
   989                           ;main.c: 129: printf("%02x:%02x:%02x Start!", time[2],time[1],time[0]);
   990  001564  0E21               	movlw	low STR_6
   991  001566  6E08               	movwf	printf@f,c
   992  001568  0E10               	movlw	high STR_6
   993  00156A  6E09               	movwf	printf@f+1,c
   994  00156C  5008               	movf	printf@f,w,c
   995  00156E  1009               	iorwf	printf@f+1,w,c
   996  001570  A4D8               	btfss	status,2,c
   997  001572  0E00               	movlw	low (__mediumconst shr (0+16))
   998  001574  6E0A               	movwf	printf@f+2,c
   999  001576  EE20 F002          	lfsr	2,2
  1000  00157A  5023               	movf	stand_by@time,w,c
  1001  00157C  26D9               	addwf	fsr2l,f,c
  1002  00157E  5024               	movf	stand_by@time+1,w,c
  1003  001580  22DA               	addwfc	fsr2h,f,c
  1004  001582  50DF               	movf	indf2,w,c
  1005  001584  6E25               	movwf	??_stand_by& (0+255),c
  1006  001586  5025               	movf	??_stand_by,w,c
  1007  001588  6E0B               	movwf	?_printf+3,c
  1008  00158A  6A0C               	clrf	?_printf+4,c
  1009  00158C  EE20 F001          	lfsr	2,1
  1010  001590  5023               	movf	stand_by@time,w,c
  1011  001592  26D9               	addwf	fsr2l,f,c
  1012  001594  5024               	movf	stand_by@time+1,w,c
  1013  001596  22DA               	addwfc	fsr2h,f,c
  1014  001598  50DF               	movf	indf2,w,c
  1015  00159A  6E26               	movwf	(??_stand_by+1)& (0+255),c
  1016  00159C  5026               	movf	??_stand_by+1,w,c
  1017  00159E  6E0D               	movwf	?_printf+5,c
  1018  0015A0  6A0E               	clrf	?_printf+6,c
  1019  0015A2  C023  FFD9         	movff	stand_by@time,fsr2l
  1020  0015A6  C024  FFDA         	movff	stand_by@time+1,fsr2h
  1021  0015AA  50DF               	movf	indf2,w,c
  1022  0015AC  6E27               	movwf	(??_stand_by+2)& (0+255),c
  1023  0015AE  5027               	movf	??_stand_by+2,w,c
  1024  0015B0  6E0F               	movwf	?_printf+7,c
  1025  0015B2  6A10               	clrf	?_printf+8,c
  1026  0015B4  EC4A  F008         	call	_printf	;wreg free
  1027                           
  1028                           ;main.c: 130: _delay((unsigned long)((10)*(8000000/4000.0)));
  1029  0015B8  0E1A               	movlw	26
  1030  0015BA  6E25               	movwf	??_stand_by& (0+255),c
  1031  0015BC  0EF8               	movlw	248
  1032  0015BE                     u807:
  1033  0015BE  2EE8               	decfsz	wreg,f,c
  1034  0015C0  D7FE               	bra	u807
  1035  0015C2  2E25               	decfsz	??_stand_by& (0+255),f,c
  1036  0015C4  D7FC               	bra	u807
  1037  0015C6  D000               	nop2	
  1038  0015C8  0012               	return		;funcret
  1039  0015CA                     __end_of_stand_by:
  1040                           	opt stack 0
  1041                           tblptru	equ	0xFF8
  1042                           tblptrh	equ	0xFF7
  1043                           tblptrl	equ	0xFF6
  1044                           tablat	equ	0xFF5
  1045                           prodl	equ	0xFF3
  1046                           intcon2	equ	0xFF1
  1047                           wreg	equ	0xFE8
  1048                           indf2	equ	0xFDF
  1049                           fsr2h	equ	0xFDA
  1050                           fsr2l	equ	0xFD9
  1051                           status	equ	0xFD8
  1052                           
  1053 ;; *************** function _update_time *****************
  1054 ;; Defined at:
  1055 ;;		line 133 in file "main.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  time            2    3[COMRAM] PTR unsigned char 
  1058 ;;		 -> main@end_time(7), main@start_time(7), main@time(7), 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  i               1    5[COMRAM] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        3 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    2
  1077 ;; This function calls:
  1078 ;;		_I2C_Master_Read
  1079 ;;		_I2C_Master_Start
  1080 ;;		_I2C_Master_Stop
  1081 ;;		_I2C_Master_Write
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;;		_stand_by
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text3
  1089  00164C                     __ptext3:
  1090                           	opt stack 0
  1091  00164C                     _update_time:
  1092                           	opt stack 28
  1093                           
  1094                           ;main.c: 136: I2C_Master_Start();
  1095                           
  1096                           ;incstack = 0
  1097  00164C  EC9B  F00C         	call	_I2C_Master_Start	;wreg free
  1098                           
  1099                           ;main.c: 137: I2C_Master_Write(0b11010000);
  1100  001650  0E00               	movlw	0
  1101  001652  6E03               	movwf	I2C_Master_Write@d+1,c
  1102  001654  0ED0               	movlw	208
  1103  001656  6E02               	movwf	I2C_Master_Write@d,c
  1104  001658  EC92  F00C         	call	_I2C_Master_Write	;wreg free
  1105                           
  1106                           ;main.c: 138: I2C_Master_Write(0x00);
  1107  00165C  0E00               	movlw	0
  1108  00165E  6E03               	movwf	I2C_Master_Write@d+1,c
  1109  001660  0E00               	movlw	0
  1110  001662  6E02               	movwf	I2C_Master_Write@d,c
  1111  001664  EC92  F00C         	call	_I2C_Master_Write	;wreg free
  1112                           
  1113                           ;main.c: 139: I2C_Master_Stop();
  1114  001668  EC97  F00C         	call	_I2C_Master_Stop	;wreg free
  1115                           
  1116                           ;main.c: 142: I2C_Master_Start();
  1117  00166C  EC9B  F00C         	call	_I2C_Master_Start	;wreg free
  1118                           
  1119                           ;main.c: 143: I2C_Master_Write(0b11010001);
  1120  001670  0E00               	movlw	0
  1121  001672  6E03               	movwf	I2C_Master_Write@d+1,c
  1122  001674  0ED1               	movlw	209
  1123  001676  6E02               	movwf	I2C_Master_Write@d,c
  1124  001678  EC92  F00C         	call	_I2C_Master_Write	;wreg free
  1125                           
  1126                           ;main.c: 144: for(unsigned char i=0;i<0x06;i++){
  1127  00167C  0E00               	movlw	0
  1128  00167E  6E06               	movwf	update_time@i,c
  1129  001680                     l1285:
  1130  001680  0E05               	movlw	5
  1131  001682  6406               	cpfsgt	update_time@i,c
  1132  001684  D001               	goto	l1289
  1133  001686  D00E               	goto	l1295
  1134  001688                     l1289:
  1135                           
  1136                           ;main.c: 145: time[i] = I2C_Master_Read(1);
  1137  001688  5006               	movf	update_time@i,w,c
  1138  00168A  0D01               	mullw	1
  1139  00168C  50F3               	movf	prodl,w,c
  1140  00168E  2404               	addwf	update_time@time,w,c
  1141  001690  6ED9               	movwf	fsr2l,c
  1142  001692  50F4               	movf	prodh,w,c
  1143  001694  2005               	addwfc	update_time@time+1,w,c
  1144  001696  6EDA               	movwf	fsr2h,c
  1145  001698  0E01               	movlw	1
  1146  00169A  EC48  F00C         	call	_I2C_Master_Read
  1147  00169E  6EDF               	movwf	indf2,c
  1148  0016A0  2A06               	incf	update_time@i,f,c
  1149  0016A2  D7EE               	goto	l1285
  1150  0016A4                     l1295:
  1151                           
  1152                           ;main.c: 146: }
  1153                           ;main.c: 148: time[6] = I2C_Master_Read(0);
  1154  0016A4  EE20 F006          	lfsr	2,6
  1155  0016A8  5004               	movf	update_time@time,w,c
  1156  0016AA  26D9               	addwf	fsr2l,f,c
  1157  0016AC  5005               	movf	update_time@time+1,w,c
  1158  0016AE  22DA               	addwfc	fsr2h,f,c
  1159  0016B0  0E00               	movlw	0
  1160  0016B2  EC48  F00C         	call	_I2C_Master_Read
  1161  0016B6  6EDF               	movwf	indf2,c
  1162                           
  1163                           ;main.c: 149: I2C_Master_Stop();
  1164  0016B8  EC97  F00C         	call	_I2C_Master_Stop	;wreg free
  1165  0016BC  0012               	return		;funcret
  1166  0016BE                     __end_of_update_time:
  1167                           	opt stack 0
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           prodh	equ	0xFF4
  1173                           prodl	equ	0xFF3
  1174                           intcon2	equ	0xFF1
  1175                           wreg	equ	0xFE8
  1176                           indf2	equ	0xFDF
  1177                           fsr2h	equ	0xFDA
  1178                           fsr2l	equ	0xFD9
  1179                           status	equ	0xFD8
  1180                           
  1181 ;; *************** function _I2C_Master_Write *****************
  1182 ;; Defined at:
  1183 ;;		line 47 in file "I2C.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  d               2    1[COMRAM] unsigned int 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;Total ram usage:        2 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    1
  1204 ;; This function calls:
  1205 ;;		_I2C_Master_Wait
  1206 ;; This function is called by:
  1207 ;;		_update_time
  1208 ;;		_set_time
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text4
  1213  001924                     __ptext4:
  1214                           	opt stack 0
  1215  001924                     _I2C_Master_Write:
  1216                           	opt stack 28
  1217                           
  1218                           ;I2C.c: 49: I2C_Master_Wait();
  1219                           
  1220                           ;incstack = 0
  1221  001924  EC7D  F00C         	call	_I2C_Master_Wait	;wreg free
  1222                           
  1223                           ;I2C.c: 50: SSPBUF = d;
  1224  001928  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  1225  00192C  0012               	return		;funcret
  1226  00192E                     __end_of_I2C_Master_Write:
  1227                           	opt stack 0
  1228                           tblptru	equ	0xFF8
  1229                           tblptrh	equ	0xFF7
  1230                           tblptrl	equ	0xFF6
  1231                           tablat	equ	0xFF5
  1232                           prodh	equ	0xFF4
  1233                           prodl	equ	0xFF3
  1234                           intcon2	equ	0xFF1
  1235                           wreg	equ	0xFE8
  1236                           indf2	equ	0xFDF
  1237                           fsr2h	equ	0xFDA
  1238                           fsr2l	equ	0xFD9
  1239                           status	equ	0xFD8
  1240                           
  1241 ;; *************** function _I2C_Master_Stop *****************
  1242 ;; Defined at:
  1243 ;;		line 41 in file "I2C.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  2   52[None  ] int 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;Total ram usage:        0 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    1
  1264 ;; This function calls:
  1265 ;;		_I2C_Master_Wait
  1266 ;; This function is called by:
  1267 ;;		_update_time
  1268 ;;		_set_time
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text5
  1273  00192E                     __ptext5:
  1274                           	opt stack 0
  1275  00192E                     _I2C_Master_Stop:
  1276                           	opt stack 28
  1277                           
  1278                           ;I2C.c: 43: I2C_Master_Wait();
  1279                           
  1280                           ;incstack = 0
  1281  00192E  EC7D  F00C         	call	_I2C_Master_Wait	;wreg free
  1282                           
  1283                           ;I2C.c: 44: PEN = 1;
  1284  001932  84C5               	bsf	4037,2,c	;volatile
  1285  001934  0012               	return		;funcret
  1286  001936                     __end_of_I2C_Master_Stop:
  1287                           	opt stack 0
  1288                           tblptru	equ	0xFF8
  1289                           tblptrh	equ	0xFF7
  1290                           tblptrl	equ	0xFF6
  1291                           tablat	equ	0xFF5
  1292                           prodh	equ	0xFF4
  1293                           prodl	equ	0xFF3
  1294                           intcon2	equ	0xFF1
  1295                           wreg	equ	0xFE8
  1296                           indf2	equ	0xFDF
  1297                           fsr2h	equ	0xFDA
  1298                           fsr2l	equ	0xFD9
  1299                           status	equ	0xFD8
  1300                           
  1301 ;; *************** function _I2C_Master_Start *****************
  1302 ;; Defined at:
  1303 ;;		line 29 in file "I2C.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2   48[None  ] int 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;Total ram usage:        0 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    1
  1324 ;; This function calls:
  1325 ;;		_I2C_Master_Wait
  1326 ;; This function is called by:
  1327 ;;		_update_time
  1328 ;;		_set_time
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text6
  1333  001936                     __ptext6:
  1334                           	opt stack 0
  1335  001936                     _I2C_Master_Start:
  1336                           	opt stack 28
  1337                           
  1338                           ;I2C.c: 31: I2C_Master_Wait();
  1339                           
  1340                           ;incstack = 0
  1341  001936  EC7D  F00C         	call	_I2C_Master_Wait	;wreg free
  1342                           
  1343                           ;I2C.c: 32: SEN = 1;
  1344  00193A  80C5               	bsf	4037,0,c	;volatile
  1345  00193C  0012               	return		;funcret
  1346  00193E                     __end_of_I2C_Master_Start:
  1347                           	opt stack 0
  1348                           tblptru	equ	0xFF8
  1349                           tblptrh	equ	0xFF7
  1350                           tblptrl	equ	0xFF6
  1351                           tablat	equ	0xFF5
  1352                           prodh	equ	0xFF4
  1353                           prodl	equ	0xFF3
  1354                           intcon2	equ	0xFF1
  1355                           wreg	equ	0xFE8
  1356                           indf2	equ	0xFDF
  1357                           fsr2h	equ	0xFDA
  1358                           fsr2l	equ	0xFD9
  1359                           status	equ	0xFD8
  1360                           
  1361 ;; *************** function _I2C_Master_Read *****************
  1362 ;; Defined at:
  1363 ;;		line 53 in file "I2C.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  a               1    wreg     unsigned char 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  a               1    1[COMRAM] unsigned char 
  1368 ;;  temp            1    2[COMRAM] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      unsigned char 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;Total ram usage:        2 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    1
  1385 ;; This function calls:
  1386 ;;		_I2C_Master_Wait
  1387 ;; This function is called by:
  1388 ;;		_update_time
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text7
  1393  001890                     __ptext7:
  1394                           	opt stack 0
  1395  001890                     _I2C_Master_Read:
  1396                           	opt stack 28
  1397                           
  1398                           ;incstack = 0
  1399                           ;I2C_Master_Read@a stored from wreg
  1400  001890  6E02               	movwf	I2C_Master_Read@a,c
  1401                           
  1402                           ;I2C.c: 55: unsigned char temp;
  1403                           ;I2C.c: 56: I2C_Master_Wait();
  1404  001892  EC7D  F00C         	call	_I2C_Master_Wait	;wreg free
  1405                           
  1406                           ;I2C.c: 57: RCEN = 1;
  1407  001896  86C5               	bsf	4037,3,c	;volatile
  1408                           
  1409                           ;I2C.c: 58: I2C_Master_Wait();
  1410  001898  EC7D  F00C         	call	_I2C_Master_Wait	;wreg free
  1411                           
  1412                           ;I2C.c: 59: temp = SSPBUF;
  1413  00189C  CFC9 F003          	movff	4041,I2C_Master_Read@temp	;volatile
  1414                           
  1415                           ;I2C.c: 60: I2C_Master_Wait();
  1416  0018A0  EC7D  F00C         	call	_I2C_Master_Wait	;wreg free
  1417                           
  1418                           ;I2C.c: 61: ACKDT = (a)?0:1;
  1419  0018A4  5002               	movf	I2C_Master_Read@a,w,c
  1420  0018A6  A4D8               	btfss	status,2,c
  1421  0018A8  D002               	goto	u30
  1422  0018AA  8AC5               	bsf	4037,5,c	;volatile
  1423  0018AC  D001               	goto	l891
  1424  0018AE                     u30:
  1425  0018AE  9AC5               	bcf	4037,5,c	;volatile
  1426  0018B0                     l891:
  1427                           
  1428                           ;I2C.c: 62: ACKEN = 1;
  1429  0018B0  88C5               	bsf	4037,4,c	;volatile
  1430                           
  1431                           ;I2C.c: 63: return temp;
  1432  0018B2  5003               	movf	I2C_Master_Read@temp,w,c
  1433  0018B4  0012               	return	
  1434  0018B6                     __end_of_I2C_Master_Read:
  1435                           	opt stack 0
  1436                           tblptru	equ	0xFF8
  1437                           tblptrh	equ	0xFF7
  1438                           tblptrl	equ	0xFF6
  1439                           tablat	equ	0xFF5
  1440                           prodh	equ	0xFF4
  1441                           prodl	equ	0xFF3
  1442                           intcon2	equ	0xFF1
  1443                           wreg	equ	0xFE8
  1444                           indf2	equ	0xFDF
  1445                           fsr2h	equ	0xFDA
  1446                           fsr2l	equ	0xFD9
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function _I2C_Master_Wait *****************
  1450 ;; Defined at:
  1451 ;;		line 24 in file "I2C.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;Total ram usage:        1 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_I2C_Master_Start
  1475 ;;		_I2C_Master_Stop
  1476 ;;		_I2C_Master_Write
  1477 ;;		_I2C_Master_Read
  1478 ;;		_I2C_Master_RepeatedStart
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text8
  1483  0018FA                     __ptext8:
  1484                           	opt stack 0
  1485  0018FA                     _I2C_Master_Wait:
  1486                           	opt stack 28
  1487  0018FA                     l149:
  1488  0018FA  B4C7               	btfsc	4039,2,c	;volatile
  1489  0018FC  D7FE               	goto	l149
  1490  0018FE  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  1491  001902  0E1F               	movlw	31
  1492  001904  1601               	andwf	??_I2C_Master_Wait,f,c
  1493  001906  B4D8               	btfsc	status,2,c
  1494  001908  0012               	return	
  1495  00190A  D7F7               	goto	l149
  1496  00190C                     __end_of_I2C_Master_Wait:
  1497                           	opt stack 0
  1498                           tblptru	equ	0xFF8
  1499                           tblptrh	equ	0xFF7
  1500                           tblptrl	equ	0xFF6
  1501                           tablat	equ	0xFF5
  1502                           prodh	equ	0xFF4
  1503                           prodl	equ	0xFF3
  1504                           intcon2	equ	0xFF1
  1505                           wreg	equ	0xFE8
  1506                           indf2	equ	0xFDF
  1507                           fsr2h	equ	0xFDA
  1508                           fsr2l	equ	0xFD9
  1509                           status	equ	0xFD8
  1510                           
  1511 ;; *************** function _printf *****************
  1512 ;; Defined at:
  1513 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  f               3    7[COMRAM] PTR const unsigned char 
  1516 ;;		 -> STR_6(22), STR_5(22), ROM(65535), STR_4(12), 
  1517 ;;		 -> STR_3(11), STR_2(15), STR_1(15), 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  idx             1   24[COMRAM] unsigned char 
  1520 ;;  tmpval          4    0        struct .
  1521 ;;  width           2   31[COMRAM] int 
  1522 ;;  len             2   29[COMRAM] unsigned int 
  1523 ;;  val             2   26[COMRAM] unsigned int 
  1524 ;;  cp              2   22[COMRAM] PTR const unsigned char 
  1525 ;;		 -> printf@c(1), 
  1526 ;;  ap              2   20[COMRAM] PTR void [1]
  1527 ;;		 -> ?_printf(2), 
  1528 ;;  c               1   33[COMRAM] char 
  1529 ;;  prec            1   28[COMRAM] char 
  1530 ;;  flag            1   25[COMRAM] unsigned char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  2    7[COMRAM] int 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1540 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;Total ram usage:       27 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    2
  1547 ;; This function calls:
  1548 ;;		___lwdiv
  1549 ;;		___wmul
  1550 ;;		_isdigit
  1551 ;;		_putch
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;;		_stand_by
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text9
  1559  001094                     __ptext9:
  1560                           	opt stack 0
  1561  001094                     _printf:
  1562                           	opt stack 27
  1563                           
  1564                           ;doprnt.c: 466: va_list ap;
  1565                           ;doprnt.c: 499: signed char c;
  1566                           ;doprnt.c: 501: int width;
  1567                           ;doprnt.c: 506: signed char prec;
  1568                           ;doprnt.c: 508: unsigned char flag;
  1569                           ;doprnt.c: 523: union {
  1570                           ;doprnt.c: 524: unsigned long vd;
  1571                           ;doprnt.c: 525: double integ;
  1572                           ;doprnt.c: 526: } tmpval;
  1573                           ;doprnt.c: 528: unsigned int val;
  1574                           ;doprnt.c: 529: unsigned len;
  1575                           ;doprnt.c: 530: const char * cp;
  1576                           ;doprnt.c: 533: *ap = __va_start();
  1577                           
  1578                           ;incstack = 0
  1579  001094  0E0B               	movlw	low (?_printf+3)
  1580  001096  6E15               	movwf	printf@ap,c
  1581  001098  0E00               	movlw	high (?_printf+3)
  1582  00109A  6E16               	movwf	printf@ap+1,c
  1583                           
  1584                           ;doprnt.c: 536: while(c = *f++) {
  1585  00109C  D143               	goto	l1395
  1586  00109E                     l1301:
  1587                           
  1588                           ;doprnt.c: 538: if(c != '%')
  1589  00109E  0E25               	movlw	37
  1590  0010A0  1822               	xorwf	printf@c,w,c
  1591  0010A2  B4D8               	btfsc	status,2,c
  1592  0010A4  D004               	goto	l1305
  1593                           
  1594                           ;doprnt.c: 540: {
  1595                           ;doprnt.c: 541: (putch(c) );
  1596  0010A6  5022               	movf	printf@c,w,c
  1597  0010A8  EC86  F00C         	call	_putch
  1598                           
  1599                           ;doprnt.c: 542: continue;
  1600  0010AC  D13B               	goto	l1395
  1601  0010AE                     l1305:
  1602                           
  1603                           ;doprnt.c: 543: }
  1604                           ;doprnt.c: 546: width = 0;
  1605  0010AE  0E00               	movlw	0
  1606  0010B0  6E21               	movwf	printf@width+1,c
  1607  0010B2  0E00               	movlw	0
  1608  0010B4  6E20               	movwf	printf@width,c
  1609                           
  1610                           ;doprnt.c: 548: flag = 0;
  1611  0010B6  0E00               	movlw	0
  1612  0010B8  6E1A               	movwf	printf@flag,c
  1613                           
  1614                           ;doprnt.c: 551: switch(*f) {
  1615                           
  1616                           ;doprnt.c: 550: for(;;) {
  1617  0010BA  D007               	goto	l1313
  1618  0010BC                     l1307:
  1619                           
  1620                           ;doprnt.c: 580: flag |= 0x04;
  1621  0010BC  841A               	bsf	printf@flag,2,c
  1622                           
  1623                           ;doprnt.c: 581: f++;
  1624  0010BE  0E01               	movlw	1
  1625  0010C0  2608               	addwf	printf@f,f,c
  1626  0010C2  0E00               	movlw	0
  1627  0010C4  2209               	addwfc	printf@f+1,f,c
  1628  0010C6  0E00               	movlw	0
  1629  0010C8  220A               	addwfc	printf@f+2,f,c
  1630  0010CA                     l1313:
  1631  0010CA  C008  FFF6         	movff	printf@f,tblptrl
  1632  0010CE  C009  FFF7         	movff	printf@f+1,tblptrh
  1633  0010D2  C00A  FFF8         	movff	printf@f+2,tblptru
  1634  0010D6  0008               	tblrd		*
  1635  0010D8  50F5               	movf	tablat,w,c
  1636                           
  1637                           ; Switch size 1, requested type "space"
  1638                           ; Number of cases is 1, Range of values is 48 to 48
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte            4     3 (average)
  1642                           ;	Chosen strategy is simple_byte
  1643  0010DA  0A30               	xorlw	48	; case 48
  1644  0010DC  B4D8               	btfsc	status,2,c
  1645  0010DE  D7EE               	goto	l1307
  1646                           
  1647                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1648                           
  1649                           ;doprnt.c: 586: }
  1650                           
  1651                           ;doprnt.c: 585: break;
  1652  0010E0  C008  FFF6         	movff	printf@f,tblptrl
  1653  0010E4  C009  FFF7         	movff	printf@f+1,tblptrh
  1654  0010E8  C00A  FFF8         	movff	printf@f+2,tblptru
  1655  0010EC  0008               	tblrd		*
  1656  0010EE  50F5               	movf	tablat,w,c
  1657  0010F0  EC6E  F00C         	call	_isdigit
  1658  0010F4  A0D8               	btfss	status,0,c
  1659  0010F6  D072               	goto	l1349
  1660                           
  1661                           ;doprnt.c: 598: width = 0;
  1662  0010F8  0E00               	movlw	0
  1663  0010FA  6E21               	movwf	printf@width+1,c
  1664  0010FC  0E00               	movlw	0
  1665  0010FE  6E20               	movwf	printf@width,c
  1666  001100                     l1319:
  1667                           
  1668                           ;doprnt.c: 600: width *= 10;
  1669  001100  C020  F001         	movff	printf@width,___wmul@multiplier
  1670  001104  C021  F002         	movff	printf@width+1,___wmul@multiplier+1
  1671  001108  0E00               	movlw	0
  1672  00110A  6E04               	movwf	___wmul@multiplicand+1,c
  1673  00110C  0E0A               	movlw	10
  1674  00110E  6E03               	movwf	___wmul@multiplicand,c
  1675  001110  EC5B  F00C         	call	___wmul	;wreg free
  1676  001114  C001  F020         	movff	?___wmul,printf@width
  1677  001118  C002  F021         	movff	?___wmul+1,printf@width+1
  1678                           
  1679                           ;doprnt.c: 601: width += *f++ - '0';
  1680  00111C  0ED0               	movlw	208
  1681  00111E  6E11               	movwf	??_printf& (0+255),c
  1682  001120  0EFF               	movlw	255
  1683  001122  6E12               	movwf	(??_printf+1)& (0+255),c
  1684  001124  C008  FFF6         	movff	printf@f,tblptrl
  1685  001128  C009  FFF7         	movff	printf@f+1,tblptrh
  1686  00112C  C00A  FFF8         	movff	printf@f+2,tblptru
  1687  001130  0008               	tblrd		*
  1688  001132  50F5               	movf	tablat,w,c
  1689  001134  6E13               	movwf	(??_printf+2)& (0+255),c
  1690  001136  6A14               	clrf	(??_printf+3)& (0+255),c
  1691  001138  5011               	movf	??_printf,w,c
  1692  00113A  2613               	addwf	??_printf+2,f,c
  1693  00113C  5012               	movf	??_printf+1,w,c
  1694  00113E  2214               	addwfc	??_printf+3,f,c
  1695  001140  5013               	movf	??_printf+2,w,c
  1696  001142  2620               	addwf	printf@width,f,c
  1697  001144  5014               	movf	??_printf+3,w,c
  1698  001146  2221               	addwfc	printf@width+1,f,c
  1699  001148  0E01               	movlw	1
  1700  00114A  2608               	addwf	printf@f,f,c
  1701  00114C  0E00               	movlw	0
  1702  00114E  2209               	addwfc	printf@f+1,f,c
  1703  001150  0E00               	movlw	0
  1704  001152  220A               	addwfc	printf@f+2,f,c
  1705                           
  1706                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1707  001154  C008  FFF6         	movff	printf@f,tblptrl
  1708  001158  C009  FFF7         	movff	printf@f+1,tblptrh
  1709  00115C  C00A  FFF8         	movff	printf@f+2,tblptru
  1710  001160  0008               	tblrd		*
  1711  001162  50F5               	movf	tablat,w,c
  1712  001164  EC6E  F00C         	call	_isdigit
  1713  001168  A0D8               	btfss	status,0,c
  1714  00116A  D038               	goto	l1349
  1715  00116C  D7C9               	goto	l1319
  1716  00116E                     l1327:
  1717                           
  1718                           ;doprnt.c: 757: if(width > len)
  1719  00116E  5020               	movf	printf@width,w,c
  1720  001170  5C1E               	subwf	printf@len,w,c
  1721  001172  5021               	movf	printf@width+1,w,c
  1722  001174  581F               	subwfb	printf@len+1,w,c
  1723  001176  B0D8               	btfsc	status,0,c
  1724  001178  D005               	goto	l1331
  1725                           
  1726                           ;doprnt.c: 758: width -= len;
  1727  00117A  501E               	movf	printf@len,w,c
  1728  00117C  5E20               	subwf	printf@width,f,c
  1729  00117E  501F               	movf	printf@len+1,w,c
  1730  001180  5A21               	subwfb	printf@width+1,f,c
  1731  001182  D008               	goto	l1335
  1732  001184                     l1331:
  1733                           
  1734                           ;doprnt.c: 759: else
  1735                           ;doprnt.c: 760: width = 0;
  1736  001184  0E00               	movlw	0
  1737  001186  6E21               	movwf	printf@width+1,c
  1738  001188  0E00               	movlw	0
  1739  00118A  6E20               	movwf	printf@width,c
  1740                           
  1741                           ;doprnt.c: 764: while(width--)
  1742  00118C  D003               	goto	l1335
  1743  00118E                     l1333:
  1744                           
  1745                           ;doprnt.c: 765: (putch(' ') );
  1746  00118E  0E20               	movlw	32
  1747  001190  EC86  F00C         	call	_putch
  1748  001194                     l1335:
  1749  001194  0620               	decf	printf@width,f,c
  1750  001196  A0D8               	btfss	status,0,c
  1751  001198  0621               	decf	printf@width+1,f,c
  1752  00119A  2820               	incf	printf@width,w,c
  1753  00119C  E1F8               	bnz	l1333
  1754  00119E  2821               	incf	printf@width+1,w,c
  1755  0011A0  B4D8               	btfsc	status,2,c
  1756  0011A2  D00A               	goto	l1341
  1757  0011A4  D7F4               	goto	l1333
  1758  0011A6                     l1337:
  1759                           
  1760                           ;doprnt.c: 768: (putch(*cp++) );
  1761  0011A6  C017  FFD9         	movff	printf@cp,fsr2l
  1762  0011AA  C018  FFDA         	movff	printf@cp+1,fsr2h
  1763  0011AE  50DF               	movf	indf2,w,c
  1764  0011B0  EC86  F00C         	call	_putch
  1765  0011B4  4A17               	infsnz	printf@cp,f,c
  1766  0011B6  2A18               	incf	printf@cp+1,f,c
  1767  0011B8                     l1341:
  1768  0011B8  061E               	decf	printf@len,f,c
  1769  0011BA  A0D8               	btfss	status,0,c
  1770  0011BC  061F               	decf	printf@len+1,f,c
  1771  0011BE  281E               	incf	printf@len,w,c
  1772  0011C0  E1F2               	bnz	l1337
  1773  0011C2  281F               	incf	printf@len+1,w,c
  1774  0011C4  B4D8               	btfsc	status,2,c
  1775  0011C6  D0AE               	goto	l1395
  1776  0011C8  D7EE               	goto	l1337
  1777  0011CA                     l1343:
  1778                           
  1779                           ;doprnt.c: 805: cp = (char *)&c;
  1780  0011CA  0E22               	movlw	low printf@c
  1781  0011CC  6E17               	movwf	printf@cp,c
  1782  0011CE  0E00               	movlw	high printf@c
  1783  0011D0  6E18               	movwf	printf@cp+1,c
  1784                           
  1785                           ;doprnt.c: 806: len = 1;
  1786  0011D2  0E00               	movlw	0
  1787  0011D4  6E1F               	movwf	printf@len+1,c
  1788  0011D6  0E01               	movlw	1
  1789  0011D8  6E1E               	movwf	printf@len,c
  1790                           
  1791                           ;doprnt.c: 807: goto dostring;
  1792  0011DA  D7C9               	goto	l1327
  1793  0011DC                     l1349:
  1794  0011DC  C008  F011         	movff	printf@f,??_printf
  1795  0011E0  C009  F012         	movff	printf@f+1,??_printf+1
  1796  0011E4  C00A  F013         	movff	printf@f+2,??_printf+2
  1797  0011E8  2A08               	incf	printf@f,f,c
  1798  0011EA  0E00               	movlw	0
  1799  0011EC  2209               	addwfc	printf@f+1,f,c
  1800  0011EE  220A               	addwfc	printf@f+2,f,c
  1801  0011F0  C011  FFF6         	movff	??_printf,tblptrl
  1802  0011F4  C012  FFF7         	movff	??_printf+1,tblptrh
  1803  0011F8  C013  FFF8         	movff	??_printf+2,tblptru
  1804  0011FC  0008               	tblrd		*
  1805  0011FE  CFF5 F022          	movff	tablat,printf@c
  1806  001202  5022               	movf	printf@c,w,c
  1807                           
  1808                           ; Switch size 1, requested type "space"
  1809                           ; Number of cases is 2, Range of values is 0 to 120
  1810                           ; switch strategies available:
  1811                           ; Name         Instructions Cycles
  1812                           ; simple_byte            7     4 (average)
  1813                           ;	Chosen strategy is simple_byte
  1814  001204  0A00               	xorlw	0	; case 0
  1815  001206  B4D8               	btfsc	status,2,c
  1816  001208  0012               	return	
  1817  00120A  0A78               	xorlw	120	; case 120
  1818  00120C  A4D8               	btfss	status,2,c
  1819  00120E  D7DD               	goto	l1343
  1820                           
  1821                           ;doprnt.c: 1273: {
  1822                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1823  001210  C015  FFD9         	movff	printf@ap,fsr2l
  1824  001214  C016  FFDA         	movff	printf@ap+1,fsr2h
  1825  001218  CFDE F01B          	movff	postinc2,printf@val
  1826  00121C  CFDD F01C          	movff	postdec2,printf@val+1
  1827  001220  0E02               	movlw	2
  1828  001222  2615               	addwf	printf@ap,f,c
  1829  001224  0E00               	movlw	0
  1830  001226  2216               	addwfc	printf@ap+1,f,c
  1831                           
  1832                           ;doprnt.c: 1287: }
  1833                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1834  001228  0E01               	movlw	1
  1835  00122A  6E22               	movwf	printf@c,c
  1836  00122C                     l1357:
  1837  00122C  0E04               	movlw	4
  1838  00122E  1822               	xorwf	printf@c,w,c
  1839  001230  B4D8               	btfsc	status,2,c
  1840  001232  D015               	goto	l1369
  1841                           
  1842                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1843  001234  5022               	movf	printf@c,w,c
  1844  001236  0D02               	mullw	2
  1845  001238  0E12               	movlw	low _hexpowers
  1846  00123A  24F3               	addwf	prodl,w,c
  1847  00123C  6EF6               	movwf	tblptrl,c
  1848  00123E  0E10               	movlw	high _hexpowers
  1849  001240  20F4               	addwfc	prodh,w,c
  1850  001242  6EF7               	movwf	tblptrh,c
  1851  001244                     	if	1	;There are 3 active tblptr bytes
  1852  001244  6AF8               	clrf	tblptru,c
  1853  001246  0E00               	movlw	low (__mediumconst shr (0+16))
  1854  001248  22F8               	addwfc	tblptru,f,c
  1855  00124A                     	endif
  1856  00124A  0009               	tblrd		*+
  1857  00124C  50F5               	movf	tablat,w,c
  1858  00124E  5C1B               	subwf	printf@val,w,c
  1859  001250  0009               	tblrd		*+
  1860  001252  50F5               	movf	tablat,w,c
  1861  001254  581C               	subwfb	printf@val+1,w,c
  1862  001256  A0D8               	btfss	status,0,c
  1863  001258  D002               	goto	l1369
  1864                           
  1865                           ;doprnt.c: 1318: break;
  1866  00125A  2A22               	incf	printf@c,f,c
  1867  00125C  D7E7               	goto	l1357
  1868  00125E                     l1369:
  1869                           
  1870                           ;doprnt.c: 1381: if(width > c)
  1871  00125E  0E80               	movlw	128
  1872  001260  BE22               	btfsc	printf@c,7,c
  1873  001262  0E7F               	movlw	127
  1874  001264  6E11               	movwf	??_printf& (0+255),c
  1875  001266  5020               	movf	printf@width,w,c
  1876  001268  5C22               	subwf	printf@c,w,c
  1877  00126A  5021               	movf	printf@width+1,w,c
  1878  00126C  0A80               	xorlw	128
  1879  00126E  5811               	subwfb	??_printf& (0+255),w,c
  1880  001270  B0D8               	btfsc	status,0,c
  1881  001272  D007               	goto	l1373
  1882                           
  1883                           ;doprnt.c: 1382: width -= c;
  1884  001274  5022               	movf	printf@c,w,c
  1885  001276  5E20               	subwf	printf@width,f,c
  1886  001278  0E00               	movlw	0
  1887  00127A  BE22               	btfsc	printf@c,7,c
  1888  00127C  0EFF               	movlw	255
  1889  00127E  5A21               	subwfb	printf@width+1,f,c
  1890  001280  D004               	goto	l1375
  1891  001282                     l1373:
  1892                           
  1893                           ;doprnt.c: 1383: else
  1894                           ;doprnt.c: 1384: width = 0;
  1895  001282  0E00               	movlw	0
  1896  001284  6E21               	movwf	printf@width+1,c
  1897  001286  0E00               	movlw	0
  1898  001288  6E20               	movwf	printf@width,c
  1899  00128A                     l1375:
  1900                           
  1901                           ;doprnt.c: 1387: if(flag & 0x04) {
  1902  00128A  A41A               	btfss	printf@flag,2,c
  1903  00128C  D00B               	goto	l1383
  1904  00128E                     
  1905                           ;doprnt.c: 1415: if(width)
  1906  00128E  5020               	movf	printf@width,w,c
  1907  001290  1021               	iorwf	printf@width+1,w,c
  1908  001292  B4D8               	btfsc	status,2,c
  1909  001294  D015               	goto	l222
  1910                           
  1911                           ;doprnt.c: 1417: (putch('0') );
  1912                           
  1913                           ;doprnt.c: 1416: do
  1914  001296  0E30               	movlw	48
  1915  001298  EC86  F00C         	call	_putch
  1916                           
  1917                           ;doprnt.c: 1418: while(--width);
  1918  00129C  0620               	decf	printf@width,f,c
  1919  00129E  A0D8               	btfss	status,0,c
  1920  0012A0  0621               	decf	printf@width+1,f,c
  1921  0012A2  D7F5               	goto	L1
  1922  0012A4                     l1383:
  1923                           
  1924                           ;doprnt.c: 1422: {
  1925                           ;doprnt.c: 1424: if(width
  1926                           ;doprnt.c: 1428: )
  1927  0012A4  5020               	movf	printf@width,w,c
  1928  0012A6  1021               	iorwf	printf@width+1,w,c
  1929  0012A8  B4D8               	btfsc	status,2,c
  1930  0012AA  D00A               	goto	l222
  1931  0012AC                     l1385:
  1932                           
  1933                           ;doprnt.c: 1430: (putch(' ') );
  1934  0012AC  0E20               	movlw	32
  1935  0012AE  EC86  F00C         	call	_putch
  1936                           
  1937                           ;doprnt.c: 1431: while(--width);
  1938  0012B2  0620               	decf	printf@width,f,c
  1939  0012B4  A0D8               	btfss	status,0,c
  1940  0012B6  0621               	decf	printf@width+1,f,c
  1941  0012B8  5020               	movf	printf@width,w,c
  1942  0012BA  1021               	iorwf	printf@width+1,w,c
  1943  0012BC  A4D8               	btfss	status,2,c
  1944  0012BE  D7F6               	goto	l1385
  1945  0012C0                     l222:
  1946                           
  1947                           ;doprnt.c: 1469: }
  1948                           ;doprnt.c: 1472: prec = c;
  1949  0012C0  C022  F01D         	movff	printf@c,printf@prec
  1950                           
  1951                           ;doprnt.c: 1474: while(prec--) {
  1952  0012C4  D02B               	goto	l226
  1953  0012C6                     l1389:
  1954                           
  1955                           ;doprnt.c: 1478: {
  1956                           ;doprnt.c: 1499: {
  1957                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1958  0012C6  C01B  F001         	movff	printf@val,___lwdiv@dividend
  1959  0012CA  C01C  F002         	movff	printf@val+1,___lwdiv@dividend+1
  1960  0012CE  501D               	movf	printf@prec,w,c
  1961  0012D0  0D02               	mullw	2
  1962  0012D2  0E12               	movlw	low _hexpowers
  1963  0012D4  24F3               	addwf	prodl,w,c
  1964  0012D6  6EF6               	movwf	tblptrl,c
  1965  0012D8  0E10               	movlw	high _hexpowers
  1966  0012DA  20F4               	addwfc	prodh,w,c
  1967  0012DC  6EF7               	movwf	tblptrh,c
  1968  0012DE                     	if	1	;There are 3 active tblptr bytes
  1969  0012DE  6AF8               	clrf	tblptru,c
  1970  0012E0  0E00               	movlw	low (__mediumconst shr (0+16))
  1971  0012E2  22F8               	addwfc	tblptru,f,c
  1972  0012E4                     	endif
  1973  0012E4  0009               	tblrd		*+
  1974  0012E6  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1975  0012EA  000A               	tblrd		*-
  1976  0012EC  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1977  0012F0  EC8C  F00B         	call	___lwdiv	;wreg free
  1978  0012F4  5001               	movf	?___lwdiv,w,c
  1979  0012F6  0B0F               	andlw	15
  1980  0012F8  6E19               	movwf	printf@idx,c
  1981                           
  1982                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  1983  0012FA  5019               	movf	printf@idx,w,c
  1984  0012FC  0D01               	mullw	1
  1985  0012FE  0E4D               	movlw	low STR_7
  1986  001300  24F3               	addwf	prodl,w,c
  1987  001302  6EF6               	movwf	tblptrl,c
  1988  001304  0E10               	movlw	high STR_7
  1989  001306  20F4               	addwfc	prodh,w,c
  1990  001308  6EF7               	movwf	tblptrh,c
  1991  00130A                     	if	1	;There are 3 active tblptr bytes
  1992  00130A  6AF8               	clrf	tblptru,c
  1993  00130C  0E00               	movlw	low (__mediumconst shr (0+16))
  1994  00130E  22F8               	addwfc	tblptru,f,c
  1995  001310                     	endif
  1996  001310  0008               	tblrd		*
  1997  001312  CFF5 F022          	movff	tablat,printf@c
  1998                           
  1999                           ;doprnt.c: 1508: }
  2000                           ;doprnt.c: 1523: }
  2001                           ;doprnt.c: 1524: (putch(c) );
  2002  001316  5022               	movf	printf@c,w,c
  2003  001318  EC86  F00C         	call	_putch
  2004  00131C                     l226:
  2005  00131C  061D               	decf	printf@prec,f,c
  2006  00131E  281D               	incf	printf@prec,w,c
  2007  001320  A4D8               	btfss	status,2,c
  2008  001322  D7D1               	goto	l1389
  2009  001324                     l1395:
  2010  001324  C008  F011         	movff	printf@f,??_printf
  2011  001328  C009  F012         	movff	printf@f+1,??_printf+1
  2012  00132C  C00A  F013         	movff	printf@f+2,??_printf+2
  2013  001330  2A08               	incf	printf@f,f,c
  2014  001332  0E00               	movlw	0
  2015  001334  2209               	addwfc	printf@f+1,f,c
  2016  001336  220A               	addwfc	printf@f+2,f,c
  2017  001338  C011  FFF6         	movff	??_printf,tblptrl
  2018  00133C  C012  FFF7         	movff	??_printf+1,tblptrh
  2019  001340  C013  FFF8         	movff	??_printf+2,tblptru
  2020  001344  0008               	tblrd		*
  2021  001346  CFF5 F022          	movff	tablat,printf@c
  2022  00134A  5022               	movf	printf@c,w,c
  2023  00134C  B4D8               	btfsc	status,2,c
  2024  00134E  0012               	return	
  2025  001350  D6A6               	goto	l1301
  2026  001352                     __end_of_printf:
  2027                           	opt stack 0
  2028                           tblptru	equ	0xFF8
  2029                           tblptrh	equ	0xFF7
  2030                           tblptrl	equ	0xFF6
  2031                           tablat	equ	0xFF5
  2032                           prodh	equ	0xFF4
  2033                           prodl	equ	0xFF3
  2034                           intcon2	equ	0xFF1
  2035                           wreg	equ	0xFE8
  2036                           indf2	equ	0xFDF
  2037                           postinc2	equ	0xFDE
  2038                           postdec2	equ	0xFDD
  2039                           fsr2h	equ	0xFDA
  2040                           fsr2l	equ	0xFD9
  2041                           status	equ	0xFD8
  2042                           
  2043 ;; *************** function _putch *****************
  2044 ;; Defined at:
  2045 ;;		line 31 in file "lcd.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  data            1    wreg     unsigned char 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  data            1    2[COMRAM] unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;Total ram usage:        1 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    1
  2066 ;; This function calls:
  2067 ;;		_lcdNibble
  2068 ;; This function is called by:
  2069 ;;		_printf
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text10
  2074  00190C                     __ptext10:
  2075                           	opt stack 0
  2076  00190C                     _putch:
  2077                           	opt stack 27
  2078                           
  2079                           ;incstack = 0
  2080                           ;putch@data stored from wreg
  2081  00190C  6E03               	movwf	putch@data,c
  2082                           
  2083                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  2084  00190E  848C               	bsf	3980,2,c	;volatile
  2085                           
  2086                           ;lcd.c: 33: lcdNibble(data);
  2087  001910  5003               	movf	putch@data,w,c
  2088  001912  ECB5  F00B         	call	_lcdNibble
  2089  001916  0012               	return		;funcret
  2090  001918                     __end_of_putch:
  2091                           	opt stack 0
  2092                           tblptru	equ	0xFF8
  2093                           tblptrh	equ	0xFF7
  2094                           tblptrl	equ	0xFF6
  2095                           tablat	equ	0xFF5
  2096                           prodh	equ	0xFF4
  2097                           prodl	equ	0xFF3
  2098                           intcon2	equ	0xFF1
  2099                           wreg	equ	0xFE8
  2100                           indf2	equ	0xFDF
  2101                           postinc2	equ	0xFDE
  2102                           postdec2	equ	0xFDD
  2103                           fsr2h	equ	0xFDA
  2104                           fsr2l	equ	0xFD9
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function _isdigit *****************
  2108 ;; Defined at:
  2109 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  c               1    wreg     unsigned char 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  c               1    2[COMRAM] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;		None               void
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;Total ram usage:        3 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_printf
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text11
  2137  0018DC                     __ptext11:
  2138                           	opt stack 0
  2139  0018DC                     _isdigit:
  2140                           	opt stack 28
  2141                           
  2142                           ;incstack = 0
  2143                           ;isdigit@c stored from wreg
  2144  0018DC  6E03               	movwf	isdigit@c,c
  2145  0018DE  0E00               	movlw	0
  2146  0018E0  6E02               	movwf	_isdigit$544,c
  2147  0018E2  0E3A               	movlw	58
  2148  0018E4  6003               	cpfslt	isdigit@c,c
  2149  0018E6  D005               	goto	l1249
  2150  0018E8  0E2F               	movlw	47
  2151  0018EA  6403               	cpfsgt	isdigit@c,c
  2152  0018EC  D002               	goto	l1249
  2153  0018EE  0E01               	movlw	1
  2154  0018F0  6E02               	movwf	_isdigit$544,c
  2155  0018F2                     l1249:
  2156  0018F2  C002  F001         	movff	_isdigit$544,??_isdigit
  2157  0018F6  3001               	rrcf	??_isdigit,w,c
  2158  0018F8  0012               	return	
  2159  0018FA                     __end_of_isdigit:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           prodh	equ	0xFF4
  2166                           prodl	equ	0xFF3
  2167                           intcon2	equ	0xFF1
  2168                           wreg	equ	0xFE8
  2169                           indf2	equ	0xFDF
  2170                           postinc2	equ	0xFDE
  2171                           postdec2	equ	0xFDD
  2172                           fsr2h	equ	0xFDA
  2173                           fsr2l	equ	0xFD9
  2174                           status	equ	0xFD8
  2175                           
  2176 ;; *************** function ___wmul *****************
  2177 ;; Defined at:
  2178 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  multiplier      2    0[COMRAM] unsigned int 
  2181 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  product         2    4[COMRAM] unsigned int 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  2    0[COMRAM] unsigned int 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0, prodl, prodh
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2193 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;Total ram usage:        6 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_printf
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text12
  2207  0018B6                     __ptext12:
  2208                           	opt stack 0
  2209  0018B6                     ___wmul:
  2210                           	opt stack 28
  2211                           
  2212                           ;incstack = 0
  2213  0018B6  5001               	movf	___wmul@multiplier,w,c
  2214  0018B8  0203               	mulwf	___wmul@multiplicand,c
  2215  0018BA  CFF3 F005          	movff	prodl,___wmul@product
  2216  0018BE  CFF4 F006          	movff	prodh,___wmul@product+1
  2217  0018C2  5001               	movf	___wmul@multiplier,w,c
  2218  0018C4  0204               	mulwf	___wmul@multiplicand+1,c
  2219  0018C6  50F3               	movf	prodl,w,c
  2220  0018C8  2606               	addwf	___wmul@product+1,f,c
  2221  0018CA  5002               	movf	___wmul@multiplier+1,w,c
  2222  0018CC  0203               	mulwf	___wmul@multiplicand,c
  2223  0018CE  50F3               	movf	prodl,w,c
  2224  0018D0  2606               	addwf	___wmul@product+1,f,c
  2225  0018D2  C005  F001         	movff	___wmul@product,?___wmul
  2226  0018D6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2227  0018DA  0012               	return	
  2228  0018DC                     __end_of___wmul:
  2229                           	opt stack 0
  2230                           tblptru	equ	0xFF8
  2231                           tblptrh	equ	0xFF7
  2232                           tblptrl	equ	0xFF6
  2233                           tablat	equ	0xFF5
  2234                           prodh	equ	0xFF4
  2235                           prodl	equ	0xFF3
  2236                           intcon2	equ	0xFF1
  2237                           wreg	equ	0xFE8
  2238                           indf2	equ	0xFDF
  2239                           postinc2	equ	0xFDE
  2240                           postdec2	equ	0xFDD
  2241                           fsr2h	equ	0xFDA
  2242                           fsr2l	equ	0xFD9
  2243                           status	equ	0xFD8
  2244                           
  2245 ;; *************** function ___lwdiv *****************
  2246 ;; Defined at:
  2247 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  dividend        2    0[COMRAM] unsigned int 
  2250 ;;  divisor         2    2[COMRAM] unsigned int 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  quotient        2    4[COMRAM] unsigned int 
  2253 ;;  counter         1    6[COMRAM] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  2    0[COMRAM] unsigned int 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2263 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;Total ram usage:        7 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_printf
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text13
  2277  001718                     __ptext13:
  2278                           	opt stack 0
  2279  001718                     ___lwdiv:
  2280                           	opt stack 28
  2281                           
  2282                           ;incstack = 0
  2283  001718  0E00               	movlw	0
  2284  00171A  6E06               	movwf	___lwdiv@quotient+1,c
  2285  00171C  0E00               	movlw	0
  2286  00171E  6E05               	movwf	___lwdiv@quotient,c
  2287  001720  5003               	movf	___lwdiv@divisor,w,c
  2288  001722  1004               	iorwf	___lwdiv@divisor+1,w,c
  2289  001724  B4D8               	btfsc	status,2,c
  2290  001726  D01C               	goto	l638
  2291  001728  0E01               	movlw	1
  2292  00172A  6E07               	movwf	___lwdiv@counter,c
  2293  00172C  D004               	goto	l1267
  2294  00172E                     l1265:
  2295  00172E  90D8               	bcf	status,0,c
  2296  001730  3603               	rlcf	___lwdiv@divisor,f,c
  2297  001732  3604               	rlcf	___lwdiv@divisor+1,f,c
  2298  001734  2A07               	incf	___lwdiv@counter,f,c
  2299  001736                     l1267:
  2300  001736  AE04               	btfss	___lwdiv@divisor+1,7,c
  2301  001738  D7FA               	goto	l1265
  2302  00173A                     l1269:
  2303  00173A  90D8               	bcf	status,0,c
  2304  00173C  3605               	rlcf	___lwdiv@quotient,f,c
  2305  00173E  3606               	rlcf	___lwdiv@quotient+1,f,c
  2306  001740  5003               	movf	___lwdiv@divisor,w,c
  2307  001742  5C01               	subwf	___lwdiv@dividend,w,c
  2308  001744  5004               	movf	___lwdiv@divisor+1,w,c
  2309  001746  5802               	subwfb	___lwdiv@dividend+1,w,c
  2310  001748  A0D8               	btfss	status,0,c
  2311  00174A  D005               	goto	l1277
  2312  00174C  5003               	movf	___lwdiv@divisor,w,c
  2313  00174E  5E01               	subwf	___lwdiv@dividend,f,c
  2314  001750  5004               	movf	___lwdiv@divisor+1,w,c
  2315  001752  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2316  001754  8005               	bsf	___lwdiv@quotient,0,c
  2317  001756                     l1277:
  2318  001756  90D8               	bcf	status,0,c
  2319  001758  3204               	rrcf	___lwdiv@divisor+1,f,c
  2320  00175A  3203               	rrcf	___lwdiv@divisor,f,c
  2321  00175C  2E07               	decfsz	___lwdiv@counter,f,c
  2322  00175E  D7ED               	goto	l1269
  2323  001760                     l638:
  2324  001760  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2325  001764  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2326  001768  0012               	return		;funcret
  2327  00176A                     __end_of___lwdiv:
  2328                           	opt stack 0
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           prodh	equ	0xFF4
  2334                           prodl	equ	0xFF3
  2335                           intcon2	equ	0xFF1
  2336                           wreg	equ	0xFE8
  2337                           indf2	equ	0xFDF
  2338                           postinc2	equ	0xFDE
  2339                           postdec2	equ	0xFDD
  2340                           fsr2h	equ	0xFDA
  2341                           fsr2l	equ	0xFD9
  2342                           status	equ	0xFD8
  2343                           
  2344 ;; *************** function _initLCD *****************
  2345 ;; Defined at:
  2346 ;;		line 14 in file "lcd.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;Total ram usage:        1 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    2
  2367 ;; This function calls:
  2368 ;;		_lcdInst
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text14
  2375  0017B8                     __ptext14:
  2376                           	opt stack 0
  2377  0017B8                     _initLCD:
  2378                           	opt stack 28
  2379                           
  2380                           ;lcd.c: 15: _delay((unsigned long)((15)*(8000000/4000.0)));
  2381                           
  2382                           ;incstack = 0
  2383  0017B8  0E27               	movlw	39
  2384  0017BA  6E04               	movwf	??_initLCD& (0+255),c
  2385  0017BC  0EF5               	movlw	245
  2386  0017BE                     u817:
  2387  0017BE  2EE8               	decfsz	wreg,f,c
  2388  0017C0  D7FE               	bra	u817
  2389  0017C2  2E04               	decfsz	??_initLCD& (0+255),f,c
  2390  0017C4  D7FC               	bra	u817
  2391  0017C6  F000               	nop	
  2392                           
  2393                           ;lcd.c: 16: lcdInst(0b00110011);
  2394  0017C8  0E33               	movlw	51
  2395  0017CA  EC8C  F00C         	call	_lcdInst
  2396                           
  2397                           ;lcd.c: 17: lcdInst(0b00110011);
  2398  0017CE  0E33               	movlw	51
  2399  0017D0  EC8C  F00C         	call	_lcdInst
  2400                           
  2401                           ;lcd.c: 18: lcdInst(0b00110010);
  2402  0017D4  0E32               	movlw	50
  2403  0017D6  EC8C  F00C         	call	_lcdInst
  2404                           
  2405                           ;lcd.c: 19: lcdInst(0b00101000);
  2406  0017DA  0E28               	movlw	40
  2407  0017DC  EC8C  F00C         	call	_lcdInst
  2408                           
  2409                           ;lcd.c: 20: lcdInst(0b00001111);
  2410  0017E0  0E0F               	movlw	15
  2411  0017E2  EC8C  F00C         	call	_lcdInst
  2412                           
  2413                           ;lcd.c: 21: lcdInst(0b00000110);
  2414  0017E6  0E06               	movlw	6
  2415  0017E8  EC8C  F00C         	call	_lcdInst
  2416                           
  2417                           ;lcd.c: 22: lcdInst(0b00000001);
  2418  0017EC  0E01               	movlw	1
  2419  0017EE  EC8C  F00C         	call	_lcdInst
  2420                           
  2421                           ;lcd.c: 23: _delay((unsigned long)((15)*(8000000/4000.0)));
  2422  0017F2  0E27               	movlw	39
  2423  0017F4  6E04               	movwf	??_initLCD& (0+255),c
  2424  0017F6  0EF5               	movlw	245
  2425  0017F8                     u827:
  2426  0017F8  2EE8               	decfsz	wreg,f,c
  2427  0017FA  D7FE               	bra	u827
  2428  0017FC  2E04               	decfsz	??_initLCD& (0+255),f,c
  2429  0017FE  D7FC               	bra	u827
  2430  001800  F000               	nop	
  2431  001802  0012               	return		;funcret
  2432  001804                     __end_of_initLCD:
  2433                           	opt stack 0
  2434                           tblptru	equ	0xFF8
  2435                           tblptrh	equ	0xFF7
  2436                           tblptrl	equ	0xFF6
  2437                           tablat	equ	0xFF5
  2438                           prodh	equ	0xFF4
  2439                           prodl	equ	0xFF3
  2440                           intcon2	equ	0xFF1
  2441                           wreg	equ	0xFE8
  2442                           indf2	equ	0xFDF
  2443                           postinc2	equ	0xFDE
  2444                           postdec2	equ	0xFDD
  2445                           fsr2h	equ	0xFDA
  2446                           fsr2l	equ	0xFD9
  2447                           status	equ	0xFD8
  2448                           
  2449 ;; *************** function _lcdInst *****************
  2450 ;; Defined at:
  2451 ;;		line 26 in file "lcd.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  data            1    wreg     unsigned char 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  data            1    2[COMRAM] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;Total ram usage:        1 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    1
  2472 ;; This function calls:
  2473 ;;		_lcdNibble
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;;		_stand_by
  2477 ;;		_initLCD
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text15
  2482  001918                     __ptext15:
  2483                           	opt stack 0
  2484  001918                     _lcdInst:
  2485                           	opt stack 28
  2486                           
  2487                           ;incstack = 0
  2488                           ;lcdInst@data stored from wreg
  2489  001918  6E03               	movwf	lcdInst@data,c
  2490                           
  2491                           ;lcd.c: 27: LATDbits.LATD2 = 0;
  2492  00191A  948C               	bcf	3980,2,c	;volatile
  2493                           
  2494                           ;lcd.c: 28: lcdNibble(data);
  2495  00191C  5003               	movf	lcdInst@data,w,c
  2496  00191E  ECB5  F00B         	call	_lcdNibble
  2497  001922  0012               	return		;funcret
  2498  001924                     __end_of_lcdInst:
  2499                           	opt stack 0
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           prodh	equ	0xFF4
  2505                           prodl	equ	0xFF3
  2506                           intcon2	equ	0xFF1
  2507                           wreg	equ	0xFE8
  2508                           indf2	equ	0xFDF
  2509                           postinc2	equ	0xFDE
  2510                           postdec2	equ	0xFDD
  2511                           fsr2h	equ	0xFDA
  2512                           fsr2l	equ	0xFD9
  2513                           status	equ	0xFD8
  2514                           
  2515 ;; *************** function _lcdNibble *****************
  2516 ;; Defined at:
  2517 ;;		line 36 in file "lcd.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  data            1    wreg     unsigned char 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  data            1    1[COMRAM] unsigned char 
  2522 ;;  temp            1    0[COMRAM] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;Total ram usage:        2 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_lcdInst
  2542 ;;		_putch
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text16
  2547  00176A                     __ptext16:
  2548                           	opt stack 0
  2549  00176A                     _lcdNibble:
  2550                           	opt stack 27
  2551                           
  2552                           ;incstack = 0
  2553                           ;lcdNibble@data stored from wreg
  2554  00176A  6E02               	movwf	lcdNibble@data,c
  2555                           
  2556                           ;lcd.c: 38: char temp = data & 0xF0;
  2557  00176C  5002               	movf	lcdNibble@data,w,c
  2558  00176E  0BF0               	andlw	240
  2559  001770  6E01               	movwf	lcdNibble@temp,c
  2560                           
  2561                           ;lcd.c: 39: LATD = LATD & 0x0F;
  2562  001772  508C               	movf	3980,w,c	;volatile
  2563  001774  0B0F               	andlw	15
  2564  001776  6E8C               	movwf	3980,c	;volatile
  2565                           
  2566                           ;lcd.c: 40: LATD = temp | LATD;
  2567  001778  5001               	movf	lcdNibble@temp,w,c
  2568  00177A  108C               	iorwf	3980,w,c	;volatile
  2569  00177C  6E8C               	movwf	3980,c	;volatile
  2570                           
  2571                           ;lcd.c: 42: LATDbits.LATD3 = 0;
  2572  00177E  968C               	bcf	3980,3,c	;volatile
  2573                           
  2574                           ;lcd.c: 43: _delay((unsigned long)((30)*(8000000/4000000.0)));
  2575  001780  0E14               	movlw	20
  2576  001782                     u837:
  2577  001782  2EE8               	decfsz	wreg,f,c
  2578  001784  D7FE               	bra	u837
  2579                           
  2580                           ;lcd.c: 44: LATDbits.LATD3 = 1;
  2581  001786  868C               	bsf	3980,3,c	;volatile
  2582                           
  2583                           ;lcd.c: 45: _delay((unsigned long)((30)*(8000000/4000000.0)));
  2584  001788  0E14               	movlw	20
  2585  00178A                     u847:
  2586  00178A  2EE8               	decfsz	wreg,f,c
  2587  00178C  D7FE               	bra	u847
  2588                           
  2589                           ;lcd.c: 47: data = data << 4;
  2590  00178E  3802               	swapf	lcdNibble@data,w,c
  2591  001790  0BF0               	andlw	240
  2592  001792  6E02               	movwf	lcdNibble@data,c
  2593                           
  2594                           ;lcd.c: 49: temp = data & 0xF0;
  2595  001794  5002               	movf	lcdNibble@data,w,c
  2596  001796  0BF0               	andlw	240
  2597  001798  6E01               	movwf	lcdNibble@temp,c
  2598                           
  2599                           ;lcd.c: 50: LATD = LATD & 0x0F;
  2600  00179A  508C               	movf	3980,w,c	;volatile
  2601  00179C  0B0F               	andlw	15
  2602  00179E  6E8C               	movwf	3980,c	;volatile
  2603                           
  2604                           ;lcd.c: 51: LATD = temp | LATD;
  2605  0017A0  5001               	movf	lcdNibble@temp,w,c
  2606  0017A2  108C               	iorwf	3980,w,c	;volatile
  2607  0017A4  6E8C               	movwf	3980,c	;volatile
  2608                           
  2609                           ;lcd.c: 53: LATDbits.LATD3 = 0;
  2610  0017A6  968C               	bcf	3980,3,c	;volatile
  2611                           
  2612                           ;lcd.c: 54: _delay((unsigned long)((30)*(8000000/4000000.0)));
  2613  0017A8  0E14               	movlw	20
  2614  0017AA                     u857:
  2615  0017AA  2EE8               	decfsz	wreg,f,c
  2616  0017AC  D7FE               	bra	u857
  2617                           
  2618                           ;lcd.c: 55: LATDbits.LATD3 = 1;
  2619  0017AE  868C               	bsf	3980,3,c	;volatile
  2620                           
  2621                           ;lcd.c: 56: _delay((unsigned long)((30)*(8000000/4000000.0)));
  2622  0017B0  0E14               	movlw	20
  2623  0017B2                     u867:
  2624  0017B2  2EE8               	decfsz	wreg,f,c
  2625  0017B4  D7FE               	bra	u867
  2626  0017B6  0012               	return		;funcret
  2627  0017B8                     __end_of_lcdNibble:
  2628                           	opt stack 0
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           prodh	equ	0xFF4
  2634                           prodl	equ	0xFF3
  2635                           intcon2	equ	0xFF1
  2636                           wreg	equ	0xFE8
  2637                           indf2	equ	0xFDF
  2638                           postinc2	equ	0xFDE
  2639                           postdec2	equ	0xFDD
  2640                           fsr2h	equ	0xFDA
  2641                           fsr2l	equ	0xFD9
  2642                           status	equ	0xFD8
  2643                           
  2644 ;; *************** function _delay *****************
  2645 ;; Defined at:
  2646 ;;		line 153 in file "main.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  seconds         2    0[COMRAM] int 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  i               1    5[COMRAM] unsigned char 
  2651 ;;  i               2    3[COMRAM] int 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;Total ram usage:        6 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_main
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text17
  2675  00184C                     __ptext17:
  2676                           	opt stack 0
  2677  00184C                     _delay:
  2678                           	opt stack 30
  2679                           
  2680                           ;main.c: 154: for (int i = 0; i <= seconds; i ++) {
  2681                           
  2682                           ;incstack = 0
  2683  00184C  0E00               	movlw	0
  2684  00184E  6E05               	movwf	delay@i+1,c
  2685  001850  0E00               	movlw	0
  2686  001852  6E04               	movwf	delay@i,c
  2687  001854  D012               	goto	l1453
  2688  001856                     l1441:
  2689                           
  2690                           ;main.c: 155: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
  2691  001856  0E00               	movlw	0
  2692  001858  6E06               	movwf	delay@i_197,c
  2693  00185A                     l1443:
  2694  00185A  0E63               	movlw	99
  2695  00185C  6406               	cpfsgt	delay@i_197,c
  2696  00185E  D001               	goto	l1447
  2697  001860  D00A               	goto	l1451
  2698  001862                     l1447:
  2699  001862  0E1A               	movlw	26
  2700  001864  6E03               	movwf	??_delay& (0+255),c
  2701  001866  0EF8               	movlw	248
  2702  001868                     u877:
  2703  001868  2EE8               	decfsz	wreg,f,c
  2704  00186A  D7FE               	bra	u877
  2705  00186C  2E03               	decfsz	??_delay& (0+255),f,c
  2706  00186E  D7FC               	bra	u877
  2707  001870  D000               	nop2	
  2708  001872  2A06               	incf	delay@i_197,f,c
  2709  001874  D7F2               	goto	l1443
  2710  001876                     l1451:
  2711  001876  4A04               	infsnz	delay@i,f,c
  2712  001878  2A05               	incf	delay@i+1,f,c
  2713  00187A                     l1453:
  2714  00187A  5004               	movf	delay@i,w,c
  2715  00187C  5C01               	subwf	delay@seconds,w,c
  2716  00187E  5002               	movf	delay@seconds+1,w,c
  2717  001880  0A80               	xorlw	128
  2718  001882  6E03               	movwf	??_delay& (0+255),c
  2719  001884  5005               	movf	delay@i+1,w,c
  2720  001886  0A80               	xorlw	128
  2721  001888  5803               	subwfb	??_delay& (0+255),w,c
  2722  00188A  A0D8               	btfss	status,0,c
  2723  00188C  0012               	return	
  2724  00188E  D7E3               	goto	l1441
  2725  001890                     __end_of_delay:
  2726                           	opt stack 0
  2727                           tblptru	equ	0xFF8
  2728                           tblptrh	equ	0xFF7
  2729                           tblptrl	equ	0xFF6
  2730                           tablat	equ	0xFF5
  2731                           prodh	equ	0xFF4
  2732                           prodl	equ	0xFF3
  2733                           intcon2	equ	0xFF1
  2734                           wreg	equ	0xFE8
  2735                           indf2	equ	0xFDF
  2736                           postinc2	equ	0xFDE
  2737                           postdec2	equ	0xFDD
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function _I2C_Master_Init *****************
  2743 ;; Defined at:
  2744 ;;		line 13 in file "I2C.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  c               4   13[COMRAM] const unsigned long 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:        8 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    1
  2765 ;; This function calls:
  2766 ;;		___lldiv
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text18
  2773  0016BE                     __ptext18:
  2774                           	opt stack 0
  2775  0016BE                     _I2C_Master_Init:
  2776                           	opt stack 29
  2777                           
  2778                           ;I2C.c: 16: SSPSTAT = 0b00000000;
  2779                           
  2780                           ;incstack = 0
  2781  0016BE  0E00               	movlw	0
  2782  0016C0  6EC7               	movwf	4039,c	;volatile
  2783                           
  2784                           ;I2C.c: 17: SSPCON1 = 0b00101000;
  2785  0016C2  0E28               	movlw	40
  2786  0016C4  6EC6               	movwf	4038,c	;volatile
  2787                           
  2788                           ;I2C.c: 18: SSPCON2 = 0b00000000;
  2789  0016C6  0E00               	movlw	0
  2790  0016C8  6EC5               	movwf	4037,c	;volatile
  2791                           
  2792                           ;I2C.c: 19: SSPADD = (8000000/(4*c))-1;
  2793  0016CA  0E00               	movlw	0
  2794  0016CC  6E01               	movwf	___lldiv@dividend,c
  2795  0016CE  0E12               	movlw	18
  2796  0016D0  6E02               	movwf	___lldiv@dividend+1,c
  2797  0016D2  0E7A               	movlw	122
  2798  0016D4  6E03               	movwf	___lldiv@dividend+2,c
  2799  0016D6  0E00               	movlw	0
  2800  0016D8  6E04               	movwf	___lldiv@dividend+3,c
  2801  0016DA  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  2802  0016DE  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  2803  0016E2  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  2804  0016E6  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  2805  0016EA  0E02               	movlw	2
  2806  0016EC                     u705:
  2807  0016EC  90D8               	bcf	status,0,c
  2808  0016EE  3612               	rlcf	??_I2C_Master_Init,f,c
  2809  0016F0  3613               	rlcf	??_I2C_Master_Init+1,f,c
  2810  0016F2  3614               	rlcf	??_I2C_Master_Init+2,f,c
  2811  0016F4  3615               	rlcf	??_I2C_Master_Init+3,f,c
  2812  0016F6  2EE8               	decfsz	wreg,f,c
  2813  0016F8  D7F9               	goto	u705
  2814  0016FA  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  2815  0016FE  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2816  001702  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2817  001706  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2818  00170A  ECE5  F00A         	call	___lldiv	;wreg free
  2819  00170E  0401               	decf	?___lldiv,w,c
  2820  001710  6EC8               	movwf	4040,c	;volatile
  2821                           
  2822                           ;I2C.c: 20: TRISC3 = 1;
  2823  001712  8694               	bsf	3988,3,c	;volatile
  2824                           
  2825                           ;I2C.c: 21: TRISC4 = 1;
  2826  001714  8894               	bsf	3988,4,c	;volatile
  2827  001716  0012               	return		;funcret
  2828  001718                     __end_of_I2C_Master_Init:
  2829                           	opt stack 0
  2830                           tblptru	equ	0xFF8
  2831                           tblptrh	equ	0xFF7
  2832                           tblptrl	equ	0xFF6
  2833                           tablat	equ	0xFF5
  2834                           prodh	equ	0xFF4
  2835                           prodl	equ	0xFF3
  2836                           intcon2	equ	0xFF1
  2837                           wreg	equ	0xFE8
  2838                           indf2	equ	0xFDF
  2839                           postinc2	equ	0xFDE
  2840                           postdec2	equ	0xFDD
  2841                           fsr2h	equ	0xFDA
  2842                           fsr2l	equ	0xFD9
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function ___lldiv *****************
  2846 ;; Defined at:
  2847 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  dividend        4    0[COMRAM] unsigned long 
  2850 ;;  divisor         4    4[COMRAM] unsigned long 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  quotient        4    8[COMRAM] unsigned long 
  2853 ;;  counter         1   12[COMRAM] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  4    0[COMRAM] unsigned long 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2863 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;Total ram usage:       13 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_I2C_Master_Init
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text19
  2877  0015CA                     __ptext19:
  2878                           	opt stack 0
  2879  0015CA                     ___lldiv:
  2880                           	opt stack 29
  2881                           
  2882                           ;incstack = 0
  2883  0015CA  0E00               	movlw	0
  2884  0015CC  6E09               	movwf	___lldiv@quotient,c
  2885  0015CE  0E00               	movlw	0
  2886  0015D0  6E0A               	movwf	___lldiv@quotient+1,c
  2887  0015D2  0E00               	movlw	0
  2888  0015D4  6E0B               	movwf	___lldiv@quotient+2,c
  2889  0015D6  0E00               	movlw	0
  2890  0015D8  6E0C               	movwf	___lldiv@quotient+3,c
  2891  0015DA  5005               	movf	___lldiv@divisor,w,c
  2892  0015DC  1006               	iorwf	___lldiv@divisor+1,w,c
  2893  0015DE  1007               	iorwf	___lldiv@divisor+2,w,c
  2894  0015E0  1008               	iorwf	___lldiv@divisor+3,w,c
  2895  0015E2  B4D8               	btfsc	status,2,c
  2896  0015E4  D02A               	goto	l585
  2897  0015E6  0E01               	movlw	1
  2898  0015E8  6E0D               	movwf	___lldiv@counter,c
  2899  0015EA  D006               	goto	l1405
  2900  0015EC                     l1403:
  2901  0015EC  90D8               	bcf	status,0,c
  2902  0015EE  3605               	rlcf	___lldiv@divisor,f,c
  2903  0015F0  3606               	rlcf	___lldiv@divisor+1,f,c
  2904  0015F2  3607               	rlcf	___lldiv@divisor+2,f,c
  2905  0015F4  3608               	rlcf	___lldiv@divisor+3,f,c
  2906  0015F6  2A0D               	incf	___lldiv@counter,f,c
  2907  0015F8                     l1405:
  2908  0015F8  AE08               	btfss	___lldiv@divisor+3,7,c
  2909  0015FA  D7F8               	goto	l1403
  2910  0015FC                     l1407:
  2911  0015FC  90D8               	bcf	status,0,c
  2912  0015FE  3609               	rlcf	___lldiv@quotient,f,c
  2913  001600  360A               	rlcf	___lldiv@quotient+1,f,c
  2914  001602  360B               	rlcf	___lldiv@quotient+2,f,c
  2915  001604  360C               	rlcf	___lldiv@quotient+3,f,c
  2916  001606  5005               	movf	___lldiv@divisor,w,c
  2917  001608  5C01               	subwf	___lldiv@dividend,w,c
  2918  00160A  5006               	movf	___lldiv@divisor+1,w,c
  2919  00160C  5802               	subwfb	___lldiv@dividend+1,w,c
  2920  00160E  5007               	movf	___lldiv@divisor+2,w,c
  2921  001610  5803               	subwfb	___lldiv@dividend+2,w,c
  2922  001612  5008               	movf	___lldiv@divisor+3,w,c
  2923  001614  5804               	subwfb	___lldiv@dividend+3,w,c
  2924  001616  A0D8               	btfss	status,0,c
  2925  001618  D009               	goto	l1415
  2926  00161A  5005               	movf	___lldiv@divisor,w,c
  2927  00161C  5E01               	subwf	___lldiv@dividend,f,c
  2928  00161E  5006               	movf	___lldiv@divisor+1,w,c
  2929  001620  5A02               	subwfb	___lldiv@dividend+1,f,c
  2930  001622  5007               	movf	___lldiv@divisor+2,w,c
  2931  001624  5A03               	subwfb	___lldiv@dividend+2,f,c
  2932  001626  5008               	movf	___lldiv@divisor+3,w,c
  2933  001628  5A04               	subwfb	___lldiv@dividend+3,f,c
  2934  00162A  8009               	bsf	___lldiv@quotient,0,c
  2935  00162C                     l1415:
  2936  00162C  90D8               	bcf	status,0,c
  2937  00162E  3208               	rrcf	___lldiv@divisor+3,f,c
  2938  001630  3207               	rrcf	___lldiv@divisor+2,f,c
  2939  001632  3206               	rrcf	___lldiv@divisor+1,f,c
  2940  001634  3205               	rrcf	___lldiv@divisor,f,c
  2941  001636  2E0D               	decfsz	___lldiv@counter,f,c
  2942  001638  D7E1               	goto	l1407
  2943  00163A                     l585:
  2944  00163A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2945  00163E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2946  001642  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2947  001646  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2948  00164A  0012               	return		;funcret
  2949  00164C                     __end_of___lldiv:
  2950                           	opt stack 0
  2951                           tblptru	equ	0xFF8
  2952                           tblptrh	equ	0xFF7
  2953                           tblptrl	equ	0xFF6
  2954                           tablat	equ	0xFF5
  2955                           prodh	equ	0xFF4
  2956                           prodl	equ	0xFF3
  2957                           intcon2	equ	0xFF1
  2958                           wreg	equ	0xFE8
  2959                           indf2	equ	0xFDF
  2960                           postinc2	equ	0xFDE
  2961                           postdec2	equ	0xFDD
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           prodh	equ	0xFF4
  2970                           prodl	equ	0xFF3
  2971                           intcon2	equ	0xFF1
  2972                           wreg	equ	0xFE8
  2973                           indf2	equ	0xFDF
  2974                           postinc2	equ	0xFDE
  2975                           postdec2	equ	0xFDD
  2976                           fsr2h	equ	0xFDA
  2977                           fsr2l	equ	0xFD9
  2978                           status	equ	0xFD8
  2979                           
  2980                           	psect	rparam
  2981  0000                     tblptru	equ	0xFF8
  2982                           tblptrh	equ	0xFF7
  2983                           tblptrl	equ	0xFF6
  2984                           tablat	equ	0xFF5
  2985                           prodh	equ	0xFF4
  2986                           prodl	equ	0xFF3
  2987                           intcon2	equ	0xFF1
  2988                           wreg	equ	0xFE8
  2989                           indf2	equ	0xFDF
  2990                           postinc2	equ	0xFDE
  2991                           postdec2	equ	0xFDD
  2992                           fsr2h	equ	0xFDA
  2993                           fsr2l	equ	0xFD9
  2994                           status	equ	0xFD8


Data Sizes:
    Strings     114
    Constant    32
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      64
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(COMRAM[1]), 

    printf@f	PTR const unsigned char  size(3) Largest target is 65535
		 -> STR_6(CODE[22]), STR_5(CODE[22]), ROM(CODE[65535]), STR_4(CODE[12]), 
		 -> STR_3(CODE[11]), STR_2(CODE[15]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    time_difference@time2	PTR unsigned char  size(2) Largest target is 7
		 -> main@end_time(COMRAM[7]), 

    time_difference@time1	PTR unsigned char  size(2) Largest target is 7
		 -> main@start_time(COMRAM[7]), 

    update_time@time	PTR unsigned char  size(2) Largest target is 7
		 -> main@end_time(COMRAM[7]), main@start_time(COMRAM[7]), main@time(COMRAM[7]), 

    stand_by@time	PTR unsigned char  size(2) Largest target is 7
		 -> main@time(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_stand_by
    _stand_by->_printf
    _update_time->_I2C_Master_Read
    _update_time->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _printf->___lwdiv
    _putch->_lcdNibble
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    6917
                                             39 COMRAM    25    25      0
                    _I2C_Master_Init
                              _delay
                            _initLCD
                            _lcdInst
                             _printf
                           _stand_by
                    _time_difference
                        _update_time
 ---------------------------------------------------------------------------------
 (1) _time_difference                                      6     2      4     240
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _stand_by                                             5     3      2    3027
                                             34 COMRAM     5     3      2
                            _lcdInst
                             _printf
                        _update_time
 ---------------------------------------------------------------------------------
 (1) _update_time                                          3     1      2     740
                                              3 COMRAM     3     1      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     406
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      30
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _printf                                              31    22      9    1979
                                              7 COMRAM    27    18      9
                            ___lwdiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (4) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                6     4      2     220
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     376
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _delay
   _initLCD
     _lcdInst
       _lcdNibble
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___wmul
     _isdigit
     _putch
       _lcdNibble
   _stand_by
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___wmul
       _isdigit
       _putch
         _lcdNibble
     _update_time
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _time_difference
   _update_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     40      40       1       50.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM_1            80      0       0      37        0.0%
BIGRAM             EEE      0       0      38        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sat Feb 04 17:50:01 2017

              _update_time 164C                         l66 1470                         u30 18AE  
      ___wmul@multiplicand 0003                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000                        l222 12C0                        l226 131C  
                      l149 18FA                        l638 1760                        l585 163A  
                      l891 18B0               __CFG_CPB$OFF 000000                        _PEN 007E2A  
             __CFG_CPD$OFF 000000                        u705 16EC                        _SEN 007E28  
                      u807 15BE                        u817 17BE                        u827 17F8  
                      u837 1782                        u847 178A                        u857 17AA  
                      u867 17B2                        u877 1868                        wreg 000FE8  
             __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000                       l1301 109E  
                     l1313 10CA                       l1305 10AE                       l1403 15EC  
                     l1331 1184                       l1307 10BC                       l1405 15F8  
                     l1341 11B8                       l1333 118E                       l1415 162C  
                     l1407 15FC                       l1343 11CA                       l1335 1194  
                     l1327 116E                       l1319 1100                       l1441 1856  
                     l1265 172E                       l1249 18F2                       l1337 11A6  
                     l1451 1876                       l1443 185A                       l1267 1736  
                     l1453 187A                       l1277 1756                       l1269 173A  
                     l1373 1282                       l1357 122C                       l1349 11DC  
                     l1285 1680                       l1447 1862                       l1383 12A4  
                     l1375 128A                       l1295 16A4                       l1385 12AC  
                     l1369 125E                       l1289 1688                       l1395 1324  
                     l1389 12C6                       l1477 139E                       l1479 13AA  
                     STR_1 106D                       STR_2 105E                       STR_3 1088  
                     STR_4 107C                       STR_5 1037                       STR_6 1021  
                     STR_7 104D                       _LATA 000F89                       _LATB 000F8A  
                     _LATC 000F8B                       _LATD 000F8C                       _LATE 000F8D  
                     _RCEN 007E2B                       _RSEN 007E29                       _main 1352  
                     _keys 1001                       fsr2h 000FDA                       indf2 000FDF  
                     fsr2l 000FD9                       prodh 000FF4                       prodl 000FF3  
                     start 0002              __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000  
             ___param_bank 000000           ?_I2C_Master_Init 000E           ?_I2C_Master_Read 0001  
         ?_I2C_Master_Wait 0001               main@end_time 0039           ?_I2C_Master_Stop 0001  
                    ?_main 0001                      _ACKEN 007E2C                      _ACKDT 007E2D  
          __end_of___lldiv 164C            __end_of___lwdiv 176A                      _PORTB 000F81  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      _TRISE 000F96              __CFG_PWRT$OFF 000000  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000            __end_of_lcdInst 1924             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000                      _nRBPU 007F8F              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000            __end_of_initLCD 1804  
           __CFG_EBTRB$OFF 000000                      _delay 184C            __end_of_isdigit 18FA  
                    _putch 190C                      main@d 0040                      tablat 000FF5  
                    status 000FD8               stand_by@time 0023             __CFG_PBADEN$ON 000000  
          __initialization 193E               __end_of_main 14F4               __end_of_keys 1012  
             update_time@i 0006                     ??_main 0028              __activetblptr 000003  
        ?_I2C_Master_Start 0001          ?_I2C_Master_Write 0002                     ?_delay 0001  
       ??_I2C_Master_Start 0002                     _ADCON0 000FC2                     _ADCON1 000FC1  
       ??_I2C_Master_Write 0004                     ?_putch 0001                     _SSPADD 000FC8  
                   _TRISC3 007CA3                     _TRISC4 007CA4                     _SSPBUF 000FC9  
          update_time@time 0004             __CFG_XINST$OFF 000000                     ___wmul 18B6  
           __CFG_STVREN$ON 000000                  ??___lldiv 0009                  ??___lwdiv 0005  
                   delay@i 0004                  ??_lcdInst 0003                     _printf 1094  
                ??_initLCD 0004                  ??_isdigit 0001            _time_difference 1804  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8           __end_of_stand_by 15CA                 __accesstop 0080  
  __end_of__initialization 193E              ___rparam_used 000001       time_difference@time1 0001  
     time_difference@time2 0003       __end_of_happynewyear 1021             __pcstackCOMRAM 0001  
             ?_update_time 0004              __end_of_delay 1890              __end_of_putch 1918  
       __size_of_lcdNibble 004E                    ??_delay 0003                    ??_putch 0003  
       time_difference@sec 0006                    ?___wmul 0001    __end_of_time_difference 184C  
                  ?_printf 0008                    _SSPCON1 000FC6                    _SSPCON2 000FC5  
                  _SSPSTAT 000FC7          __end_of_lcdNibble 17B8                    __Hparam 0000  
                  __Lparam 0000                  ?_stand_by 0023                    ___lldiv 15CA  
          __size_of___wmul 0026                    ___lwdiv 1718               __psmallconst 1000  
                  __pcinit 193E                    __ramtop 1000                    _lcdInst 1918  
                  __ptext0 1352                    __ptext1 1804                    __ptext2 14F4  
                  __ptext3 164C                    __ptext4 1924                    __ptext5 192E  
                  __ptext6 1936                    __ptext7 1890                    __ptext8 18FA  
                  __ptext9 1094                 delay@i_197 0006            __size_of_printf 02BE  
                  _initLCD 17B8          __end_of_hexpowers 101A                    _isdigit 18DC  
 __size_of_I2C_Master_Init 005A   __size_of_I2C_Master_Read 0026   __size_of_I2C_Master_Wait 0012  
 __size_of_I2C_Master_Stop 0008       end_of_initialization 193E  __size_of_I2C_Master_Start 0008  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0005            ___lldiv@counter 000D  
                  printf@c 0022                    printf@f 0008           I2C_Master_Init@c 000E  
         I2C_Master_Read@a 0002                    postdec2 000FDD                    postinc2 000FDE  
               ??_stand_by 0025       __size_of_update_time 0072             main@start_time 0032  
         ?_time_difference 0001                  _PORTBbits 000F81               _happynewyear 101A  
              printf@width 0020             __end_of___wmul 18DC             __end_of_printf 1352  
      start_initialization 193E          ??_I2C_Master_Init 0012          ??_I2C_Master_Read 0002  
        ??_I2C_Master_Wait 0001          ??_I2C_Master_Stop 0002                   ??___wmul 0005  
         __CFG_LPT1OSC$OFF 000000                   ??_printf 0011           _I2C_Master_Start 1936  
         _I2C_Master_Write 1924           ___lwdiv@dividend 0001          __CFG_CCP2MX$PORTC 000000  
                _lcdNibble 176A                   ?___lldiv 0001                   ?___lwdiv 0001  
        __size_of_stand_by 00D6                   ?_lcdInst 0001                   ?_initLCD 0001  
              __smallconst 1000                   ?_isdigit 0001                  _hexpowers 1012  
         ___lwdiv@quotient 0005             __size_of_delay 0044             __size_of_putch 000C  
             delay@seconds 0001             ___wmul@product 0005                   _LATDbits 000F8C  
         __CFG_WDTPS$32768 000000                 ?_lcdNibble 0001          ___wmul@multiplier 0001  
            lcdNibble@data 0002                 printf@flag 001A              lcdNibble@temp 0001  
               printf@prec 001D        I2C_Master_Read@temp 0003                   __Hrparam 0000  
                 __Lrparam 0000              ??_update_time 0006         __CFG_BOREN$SBORDIS 000000  
         __size_of___lldiv 0082           __size_of___lwdiv 0052                _isdigit$544 0002  
         __size_of_lcdInst 000C            _I2C_Master_Init 16BE            _I2C_Master_Read 1890  
         __size_of_initLCD 004C            _I2C_Master_Wait 18FA            _I2C_Master_Stop 192E  
         __size_of_isdigit 001E            ___lwdiv@divisor 0003   __size_of_time_difference 0048  
          ___lwdiv@counter 0007                   __ptext10 190C                   __ptext11 18DC  
                 __ptext12 18B6                   __ptext13 1718                   __ptext14 17B8  
                 __ptext15 1918                   __ptext16 176A                   __ptext17 184C  
                 __ptext18 16BE                   __ptext19 15CA              __size_of_main 01A2  
              ??_lcdNibble 0001                   _stand_by 14F4                  printf@idx 0019  
                printf@len 001E                  printf@val 001B                   main@time 002B  
      __end_of_update_time 16BE                  putch@data 0003   __end_of_I2C_Master_Start 193E  
 __end_of_I2C_Master_Write 192E                   isdigit@c 0003           ___lldiv@dividend 0001  
                 printf@ap 0015                   printf@cp 0017    __end_of_I2C_Master_Init 1718  
  __end_of_I2C_Master_Read 18B6    __end_of_I2C_Master_Wait 190C    __end_of_I2C_Master_Stop 1936  
              lcdInst@data 0003           ___lldiv@quotient 0009          I2C_Master_Write@d 0002  
        ??_time_difference 0005  
